"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[5945],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>k});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(k,s(s({ref:t},i),{},{components:n})):o.createElement(k,s({ref:t},i))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[u]="string"==typeof e?e:r,s[1]=c;for(var l=2;l<a;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9420:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={},s="Context",c={unversionedId:"react/context",id:"react/context",title:"Context",description:"El API de contexto nos permite compartir valores y funcionalidades a trav\xe9s del \xe1rbol de componentes sin necesidad de usar props.",source:"@site/docs/react/context.md",sourceDirName:"react",slug:"/react/context",permalink:"/docs/react/context",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/react/context.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Estructura de carpetas",permalink:"/docs/react/estructura-carpetas"},next:{title:"Carga de Im\xe1genes",permalink:"/docs/react/carga-de-imagenes"}},p={},l=[{value:"Creando un contexto",id:"creando-un-contexto",level:2},{value:"Context Provider",id:"context-provider",level:2},{value:"Consumir los valores del contexto",id:"consumir-los-valores-del-contexto",level:2},{value:"Context Consumer",id:"context-consumer",level:3},{value:"useContext hook",id:"usecontext-hook",level:3},{value:"M\xe9todo estatico contextType",id:"m\xe9todo-estatico-contexttype",level:3}],i={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"context"},"Context"),(0,r.kt)("p",null,"El API de ",(0,r.kt)("strong",{parentName:"p"},"contexto")," nos permite compartir valores y funcionalidades a trav\xe9s del \xe1rbol de componentes sin necesidad de usar ",(0,r.kt)("inlineCode",{parentName:"p"},"props"),"."),(0,r.kt)("h2",{id:"creando-un-contexto"},"Creando un contexto"),(0,r.kt)("p",null,"Para crear un ",(0,r.kt)("strong",{parentName:"p"},"contexto")," hay que usar la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"React.createContext"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"React.createContext")," recibe como argumento el valor predeterminado del ",(0,r.kt)("strong",{parentName:"p"},"contexto"),"."),(0,r.kt)("p",null,"Es posible crear tantos ",(0,r.kt)("strong",{parentName:"p"},"contextos")," como sea necesario."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const Context = React.createContext({ count: 0, setCount: () => {} });\n")),(0,r.kt)("p",null,"Al crear un ",(0,r.kt)("strong",{parentName:"p"},"contexto")," se crea un objeto que consta de dos partes, ",(0,r.kt)("inlineCode",{parentName:"p"},"Context.Provider")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"Context.Consumer"),"."),(0,r.kt)("h2",{id:"context-provider"},"Context Provider"),(0,r.kt)("p",null,"El ",(0,r.kt)("strong",{parentName:"p"},"Context.Provider")," es un componente que recibe un ",(0,r.kt)("inlineCode",{parentName:"p"},"prop")," ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," que ser\xe1n los valores a compartir. Todos los componentes renderizados dentro de este componente tendran acceso a los ",(0,r.kt)("strong",{parentName:"p"},"valores")," del ",(0,r.kt)("strong",{parentName:"p"},"contexto"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const App = () => {\n  const [count, setCount] = React.useState(0);\n\n  return (\n    <Context.Provider\n      value={{\n        count,\n        setCount\n      }}\n    >\n      <Component>\n    </Context.Provider>\n  );\n}\n")),(0,r.kt)("p",null,"Los valores del ",(0,r.kt)("strong",{parentName:"p"},"contexto")," en este caso ser\xedan ",(0,r.kt)("inlineCode",{parentName:"p"},"count")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"setCount")," creados previamente usando el ",(0,r.kt)("strong",{parentName:"p"},"hook")," ",(0,r.kt)("inlineCode",{parentName:"p"},"useState"),". Tanto ",(0,r.kt)("inlineCode",{parentName:"p"},"Component")," como sus hijos van a poder acceder a estos valores."),(0,r.kt)("h2",{id:"consumir-los-valores-del-contexto"},"Consumir los valores del contexto"),(0,r.kt)("p",null,"Al consumir un ",(0,r.kt)("strong",{parentName:"p"},"contexto"),", React busca el ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider")," m\xe1s cercano para consumir su ",(0,r.kt)("strong",{parentName:"p"},"valor"),". En caso de no encontrar un ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider"),", el valor ser\xe1 el valor predeterminado al crear el ",(0,r.kt)("strong",{parentName:"p"},"contexto"),". Existen 3 formas de consumir los valores contexto:"),(0,r.kt)("h3",{id:"context-consumer"},"Context Consumer"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Consumer")," es el componente que nos permite consumir los valores del ",(0,r.kt)("strong",{parentName:"p"},"contexto")," usando una t\xe9cnica llamada ",(0,r.kt)("inlineCode",{parentName:"p"},"Render Props"),"."),(0,r.kt)("p",null,"Este m\xe9todo se puede usar tanto en componentes ",(0,r.kt)("strong",{parentName:"p"},"clase")," como en componentes ",(0,r.kt)("strong",{parentName:"p"},"funci\xf3n"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const Component = () => {\n  return (\n    <Context.Consumer>\n      {(value) => {\n        return (\n          <div>\n            <span>{value.count}</span>\n            <button\n              type="button"\n              onClick={() => value.setCount(value.count + 1)}\n            >\n              Click\n            </button>\n          </div>\n        );\n      }}\n    <Context.Consumer>\n  )\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Render Props")," renderiza una funci\xf3n en vez de un ",(0,r.kt)("strong",{parentName:"p"},"componente")," y recibe como argumento los valores del ",(0,r.kt)("strong",{parentName:"p"},"contexto"),"."),(0,r.kt)("p",null,"Para aprender m\xe1s sobre ",(0,r.kt)("strong",{parentName:"p"},"Render Props")," visita la gu\xeda oficial de ",(0,r.kt)("a",{parentName:"p",href:"https://es.reactjs.org/docs/render-props.html"},"Render Props"),"."),(0,r.kt)("h3",{id:"usecontext-hook"},"useContext hook"),(0,r.kt)("p",null,"Es posible consumir los valores del ",(0,r.kt)("strong",{parentName:"p"},"contexto")," y almacenar los valores en una variable usando el hook ",(0,r.kt)("inlineCode",{parentName:"p"},"useContext"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"useContext")," recibe como argumento el ",(0,r.kt)("strong",{parentName:"p"},"contexto")," que se desea consumir."),(0,r.kt)("p",null,"Usando este m\xe9todo es posible consumir varios ",(0,r.kt)("strong",{parentName:"p"},"contextos")," desde un mismo componente."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const Component = () => {\n  const context = useContext(Context);\n\n  return (\n    <div>\n      <span>{context.count}</span>\n      <button\n        type="button"\n        onClick={() => context.setCount(context.count + 1)}\n      >\n        Click\n      </button>\n    </div>\n  )\n}\n')),(0,r.kt)("h3",{id:"m\xe9todo-estatico-contexttype"},"M\xe9todo estatico contextType"),(0,r.kt)("p",null,"La \xfaltima forma de consumir los valores de un ",(0,r.kt)("strong",{parentName:"p"},"contexto")," es usando el m\xe9todo ",(0,r.kt)("strong",{parentName:"p"},"est\xe1tico")," ",(0,r.kt)("inlineCode",{parentName:"p"},"contextType"),"."),(0,r.kt)("p",null,"Este m\xe9todo solo est\xe1 disponible para componentes ",(0,r.kt)("strong",{parentName:"p"},"clase")," y solo es posible consumir un ",(0,r.kt)("strong",{parentName:"p"},"contexto")," a la vez."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'class Component extends React.Component {\n  static contextType = Context;\n\n  render() {\n    return (\n      <div>\n        <span>{this.context.count}</span>\n        <button\n          type="button"\n          onClick={() => this.context.setCount(this.context.count + 1)}\n        >\n          Click\n        </button>\n      </div>\n    );\n  }\n}\n\n// Otra manera de definir m\xe9todos est\xe1ticos\n\nclass Componente extends React.Component {\n  render() {\n    return (\n      <div>\n        <span>{this.context.count}</span>\n        <button\n          type="button"\n          onClick={() => value.setCount(this.context.count + 1)}\n        >\n          Click\n        </button>\n      </div>\n    );\n  }\n}\n\nComponent.contextType = Context\n')),(0,r.kt)("p",null,"Para una gu\xeda completa de los hooks visita la gu\xeda oficial de ",(0,r.kt)("a",{parentName:"p",href:"https://es.reactjs.org/docs/context.html"},"Context"),"."))}d.isMDXComponent=!0}}]);