"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[3176],{3905:(e,r,n)=>{n.d(r,{Zo:()=>d,kt:()=>f});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),u=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},d=function(e){var r=u(e.components);return t.createElement(s.Provider,{value:r},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),l=u(n),m=a,f=l["".concat(s,".").concat(m)]||l[m]||p[m]||o;return n?t.createElement(f,c(c({ref:r},d),{},{components:n})):t.createElement(f,c({ref:r},d))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[l]="string"==typeof e?e:a,c[1]=i;for(var u=2;u<o;u++)c[u]=n[u];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9862:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var t=n(7462),a=(n(7294),n(3905));const o={},c="Combinando funciones reductoras",i={unversionedId:"redux/combinando-reductoras",id:"redux/combinando-reductoras",title:"Combinando funciones reductoras",description:"En aplicaciones grandes la funci\xf3n reductora se puede volver muy larga y dif\xedcil de manejar:",source:"@site/docs/redux/combinando-reductoras.md",sourceDirName:"redux",slug:"/redux/combinando-reductoras",permalink:"/docs/redux/combinando-reductoras",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/redux/combinando-reductoras.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Operaciones asincr\xf3nicas con redux-thunk",permalink:"/docs/redux/redux-thunk"},next:{title:"Redux ToolKit",permalink:"/docs/redux/redux-tool-kit"}},s={},u=[],d={toc:u},l="wrapper";function p(e){let{components:r,...n}=e;return(0,a.kt)(l,(0,t.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"combinando-funciones-reductoras"},"Combinando funciones reductoras"),(0,a.kt)("p",null,"En aplicaciones grandes la funci\xf3n reductora se puede volver muy larga y dif\xedcil de manejar:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const reducer = (state, action) => {\n  if (action.type == "...") {\n    // c\xf3digo\n  } else if (action.type == "...") {\n    // m\xe1s c\xf3digo\n  }\n  // m\xe1s else ifs, quiz\xe1 decenas o cientos\n}\n')),(0,a.kt)("p",null,"Redux nos permite dividir la ",(0,a.kt)("strong",{parentName:"p"},"funci\xf3n reductora")," en funciones m\xe1s manejables a trav\xe9s de la funci\xf3n ",(0,a.kt)("inlineCode",{parentName:"p"},"combineReducers"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { createStore, combineReducers } from "redux";\n\nconst reducer1 = (state={}, action) => {\n  // ...\n  return state;\n}\n\nconst reducer2 = (state={}, action) => {\n  // ...\n  return state;\n}\n\nconst store = createStore(combineReducers({ tasks: reducer1, users: reducer2 }));\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"reducer1")," se va a encargar de realizar los cambios sobre el arreglo de ",(0,a.kt)("inlineCode",{parentName:"p"},"tasks")," y ",(0,a.kt)("inlineCode",{parentName:"p"},"reducer2")," se va a encargar de realizar los cambios sobre ",(0,a.kt)("inlineCode",{parentName:"p"},"users"),". Cada ",(0,a.kt)("strong",{parentName:"p"},"funci\xf3n reductora")," se va a encargar de una parte del estado."),(0,a.kt)("p",null,"Algo particular de este c\xf3digo es que estamos inicializando el estado en los argumentos de las ",(0,a.kt)("strong",{parentName:"p"},"funciones reductoras")," y ya no estamos utilizando el segundo argumento de ",(0,a.kt)("inlineCode",{parentName:"p"},"createStore")," que recibe el estado inicial. Esto se debe a que ",(0,a.kt)("inlineCode",{parentName:"p"},"combineReducers"),", al principio, llama a todas las ",(0,a.kt)("strong",{parentName:"p"},"funciones reductoras")," pas\xe1ndoles ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")," como primer argumento."),(0,a.kt)("p",null,"{% youtube %} ",(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=G_dbuk9B2pQ"},"https://www.youtube.com/watch?v=G_dbuk9B2pQ")," {% endyoutube %}"))}p.isMDXComponent=!0}}]);