"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[9019],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>g});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),c=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},u=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return a?t.createElement(g,l(l({ref:n},u),{},{components:a})):t.createElement(g,l({ref:n},u))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7839:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const o={},l="Mongoose",i={unversionedId:"nodejs/express/avanzado/mongoose",id:"nodejs/express/avanzado/mongoose",title:"Mongoose",description:"Mongoose es una librer\xeda escrita en Node.js para trabajar con MongoDB.",source:"@site/docs/nodejs/express/avanzado/mongoose.md",sourceDirName:"nodejs/express/avanzado",slug:"/nodejs/express/avanzado/mongoose",permalink:"/docs/nodejs/express/avanzado/mongoose",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/nodejs/express/avanzado/mongoose.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Carga de Im\xe1genes",permalink:"/docs/nodejs/express/avanzado/carga-de-imagenes"},next:{title:"Testing",permalink:"/docs/nodejs/express/avanzado/testing"}},s={},c=[{value:"Manipulando documentos",id:"manipulando-documentos",level:2},{value:"Creando un documento",id:"creando-un-documento",level:3},{value:"Buscando documentos",id:"buscando-documentos",level:3},{value:"Comparaci\xf3n",id:"comparaci\xf3n",level:4},{value:"Inclusi\xf3n",id:"inclusi\xf3n",level:4},{value:"Ordenar los resultados",id:"ordenar-los-resultados",level:4},{value:"Limitar los resultados",id:"limitar-los-resultados",level:4},{value:"Seleccionar llaves",id:"seleccionar-llaves",level:4},{value:"Contar los resultados",id:"contar-los-resultados",level:4},{value:"Actualizando un documento",id:"actualizando-un-documento",level:3},{value:"Eliminando un documento",id:"eliminando-un-documento",level:3},{value:"Schemas",id:"schemas",level:2},{value:"M\xe9todos de instancia",id:"m\xe9todos-de-instancia",level:3},{value:"M\xe9todos est\xe1ticos",id:"m\xe9todos-est\xe1ticos",level:3},{value:"\xcdndices secundarios",id:"\xedndices-secundarios",level:3},{value:"Atributos virtuales",id:"atributos-virtuales",level:3}],u={toc:c},d="wrapper";function p(e){let{components:n,...a}=e;return(0,r.kt)(d,(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mongoose"},"Mongoose"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://mongoosejs.com/"},"Mongoose")," es una librer\xeda escrita en Node.js para trabajar con MongoDB."),(0,r.kt)("p",null,"Para instalar ",(0,r.kt)("a",{parentName:"p",href:"http://mongoosejs.com/"},"Mongoose")," utiliza alg\xfan manejador de paquetes como ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npm")," o ",(0,r.kt)("a",{parentName:"p",href:"https://yarnpkg.com/en/"},"yarn"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ npm install mongoose\n")),(0,r.kt)("p",null,"\xd3"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ yarn add mongoose\n")),(0,r.kt)("p",null,"Aseg\xfarate que MongoDB est\xe9 corriendo de forma local. Crea un archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"app.js")," con el siguiente contenido:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'let mongoose = require("mongoose");\nmongoose.connect(\'mongodb://localhost:27017/test\', { useNewUrlParser: true });\n\nmongoose.connection.on("error", function(e) { console.error(e); });\n\n// el resto del c\xf3digo\n')),(0,r.kt)("p",null,"La primera l\xednea est\xe1 requiriendo la librer\xeda. En la segunda nos conectamos al MongoDB que est\xe1 corriendo localmente. Por \xfaltimo nos enlazamos al evento ",(0,r.kt)("inlineCode",{parentName:"p"},"error")," de ",(0,r.kt)("inlineCode",{parentName:"p"},"mongoose.connection")," para saber si ocurri\xf3 un error."),(0,r.kt)("p",null,"El siguiente paso es declarar un ",(0,r.kt)("strong",{parentName:"p"},"schema"),", que define la estructura que vamos a utilizar en nuestros documentos, y un ",(0,r.kt)("strong",{parentName:"p"},"modelo"),", que nos va a permitir interactuar con MongoDB:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'...\n// definimos el schema\nlet schema = mongoose.Schema({\n  title: String,\n  body: String,\n  published: { type: Boolean, default: false }\n});\n\n// definimos el modelo\nlet Article = mongoose.model("Article", schema);\n')),(0,r.kt)("p",null,"M\xe1s adelante hablaremos un poco m\xe1s del ",(0,r.kt)("strong",{parentName:"p"},"schema")," y los diferentes tipos de datos pero primero veamos c\xf3mo manipular los documentos de una colecci\xf3n utilizando el modelo."),(0,r.kt)("h2",{id:"manipulando-documentos"},"Manipulando documentos"),(0,r.kt)("p",null,"Una vez has definido el modelo en Mongoose puedes empezar a insertar, buscar, actualizar y eliminar los documentos de una colecci\xf3n."),(0,r.kt)("h3",{id:"creando-un-documento"},"Creando un documento"),(0,r.kt)("p",null,"Existen varias formas de insertar documentos en una colecci\xf3n. La primera es instanciar el modelo y utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"save"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'let first = new Article({ title: "Art\xedculo 1", body: "Cuerpo del art\xedculo" });\nfirst.save(function(err) {\n  if (err) return console.error(err);\n});\n')),(0,r.kt)("p",null,"Otra forma m\xe1s corta es utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"create"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.create({ title: "Art\xedculo 2", body: "Cuerpo del art\xedculo" }, function(err) {\n  if (err) return console.error(err);\n});\n')),(0,r.kt)("p",null,"Por \xfaltimo, si deseas insertar varios documentos a la vez puedes utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"insertMany"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.insertMany([\n  { title: "Art\xedculo 3", body: "Cuerpo del art\xedculo" },\n  { title: "Art\xedculo 4", body: "Cuerpo del art\xedculo" }\n], function(err) {\n  if (err) return console.error(err);\n});\n')),(0,r.kt)("h3",{id:"buscando-documentos"},"Buscando documentos"),(0,r.kt)("p",null,"Para listar todos los documentos de una colecci\xf3n utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"find")," de la siguiente forma:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Article.find(function(err, articles) {\n  if (err) return console.error(err);\n  console.log(articles);\n});\n")),(0,r.kt)("p",null,"Tambi\xe9n puedes utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"find")," para filtrar la b\xfasqueda por una o m\xe1s llaves. Por ejemplo, para buscar todos los art\xedculos que tengan un t\xedtulo espec\xedfico utilizar\xedamos lo siguiente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.find({ article: "El t\xedtulo" }, function(err, articles) {\n  if (err) return console.error(err);\n  console.log(articles);\n});\n')),(0,r.kt)("p",null,"Para buscar un documento espec\xedfico utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"findOne"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.findOne({ "_id": "...." }, function(err, article) {\n  if (err) return console.error(err);\n  console.log(article);\n});\n')),(0,r.kt)("p",null,"Para buscar por ",(0,r.kt)("inlineCode",{parentName:"p"},"_id")," existe un m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"findById"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.findById("...", function(err, article) {\n  // ...\n});\n')),(0,r.kt)("p",null,"MongoDB tiene un poderoso API de b\xfasqueda que podemos utilizar a trav\xe9s de ",(0,r.kt)("a",{parentName:"p",href:"https://mongoosejs.com/"},"Mongoose"),". A continuaci\xf3n vamos a ver las partes m\xe1s importantes pero la referencia completa la puedes encontrar en ",(0,r.kt)("a",{parentName:"p",href:"https://mongoosejs.com/docs/api.html#Query"},"este enlace"),"."),(0,r.kt)("h4",{id:"comparaci\xf3n"},"Comparaci\xf3n"),(0,r.kt)("p",null,"Para realizar comparaciones de n\xfameros utiliza las llaves ",(0,r.kt)("inlineCode",{parentName:"p"},"$gt")," (mayor qu\xe9), ",(0,r.kt)("inlineCode",{parentName:"p"},"$lt")," (menor qu\xe9), ",(0,r.kt)("inlineCode",{parentName:"p"},"$gte")," (mayor o igual a), ",(0,r.kt)("inlineCode",{parentName:"p"},"$lte")," (menor o igual a). Por ejemplo, para buscar todas las personas con edad entre 17 y 66 utilizar\xedamos lo siguiente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Person.find({ age: { $gt: 17, $lt: 66 }\xa0}, function(err, people) {\n  if (err) return console.error(err);\n  console.log(people);\n});\n")),(0,r.kt)("p",null,"Si la sintaxis de b\xfasqueda utilizando JSON te parece muy extra\xf1a, Mongoose nos ofrece una forma alternativa de expresar lo mismo encadenando m\xe9todos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Person.where("age").gt(17).lt(66).exec(function(err, people) {\n  // ...\n});\n')),(0,r.kt)("h4",{id:"inclusi\xf3n"},"Inclusi\xf3n"),(0,r.kt)("p",null,"Para comparar contra una serie de valores utiliza la llave ",(0,r.kt)("inlineCode",{parentName:"p"},"$in"),". Por ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.find({ tags: { $in: ["mongodb", "mongoose"]\xa0} }, function(err, articles) {\n  if (err) return console.error(err);\n  console.log(articles);\n});\n')),(0,r.kt)("p",null,"Tambi\xe9n existe un m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"in"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.where("tags").in(["mongodb", "mongoose"], function(err, articles) {\n  // ...\n});\n')),(0,r.kt)("h4",{id:"ordenar-los-resultados"},"Ordenar los resultados"),(0,r.kt)("p",null,"Para ordenar los documentos utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"sort"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.find().sort("title").exec(function(err, articles) {\n  // ...\n});\n')),(0,r.kt)("h4",{id:"limitar-los-resultados"},"Limitar los resultados"),(0,r.kt)("p",null,"Para limitar los resultados utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"limit"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Article.find().limit(10).exec(function(err, articles) {\n  // ...\n});\n")),(0,r.kt)("h4",{id:"seleccionar-llaves"},"Seleccionar llaves"),(0,r.kt)("p",null,"Para seleccionar llaves espec\xedficas de un documento puedes pasarle una cadena de texto al m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"find")," como segundo argumento con las llaves que quieres incluir (separadas por espacio):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.find({}, "title description", function(err, articles) {\n  // ...\n});\n')),(0,r.kt)("p",null,"Tambi\xe9n existe un m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"select"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.find().select("title description").exec(function(err, articles) {\n  // ...\n});\n')),(0,r.kt)("h4",{id:"contar-los-resultados"},"Contar los resultados"),(0,r.kt)("p",null,"Para contar el n\xfamero de resultados utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"countDocuments"),". Por ejemplo, para contar todos los documentos de una colecci\xf3n utilizar\xedamos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.countDocuments(function(err, count) {\n  if (err) return handleError(err);\n  console.log("Hay " + count + " art\xedculos");\n})\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota:")," Si la colecci\xf3n es muy grande se recomienda utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"estimateDocumentCount"),"."),(0,r.kt)("p",null,"Tambi\xe9n puedes pasarle algunas condiciones al m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"countDocuments"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.countDocuments({ published: true }, function(err, count) {\n  if (err) return handleError(err);\n  console.log("Hay " + count + " art\xedculos publicados");\n});\n')),(0,r.kt)("h3",{id:"actualizando-un-documento"},"Actualizando un documento"),(0,r.kt)("p",null,"Para actualizar un documento que tienes en memoria utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"save"),". Por ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.findById("...", function(err, article) {\n  if (err) return console.error(err);\n\n  article.title = "Otro t\xedtulo";\n  article.save(function(err) {\n    if (err) return console.error(err);\n  });\n});\n')),(0,r.kt)("p",null,"Tambi\xe9n puedes utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"update"),' para actualizar uno o m\xe1s documentos que cumplan con ciertas condiciones sin necesidad de cargarlos en memoria. Por ejemplo, para cambiar el t\xedtulo del documento con t\xedtulo "Art\xedculo 1" utilizar\xedamos el siguiente c\xf3digo:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.update({ title: "Art\xedculo 1" }, { title: "Nuevo t\xedtulo" }, function(err) {\n  if (err) return console.error(err);\n});\n')),(0,r.kt)("p",null,"El primer argumento es la condici\xf3n que deben cumplir los registros y el segundo la informaci\xf3n que se va a actualizar."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota:")," Por defecto el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"update")," s\xf3lo actualiza el primer documento encontrado. Para actualizar todos debes pasarle la opci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"multi"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.update({ title: "..." }, { title: "..." }, { multi: true }, function(err) {\n  // ...\n});\n')),(0,r.kt)("h3",{id:"eliminando-un-documento"},"Eliminando un documento"),(0,r.kt)("p",null,"Para eliminar un documento utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"remove"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.findById("...", function(err, article) {\n  if (err) return console.error(err);\n\n  article.remove(function(err) {\n    if (err) return console.error(err);\n  });\n});\n')),(0,r.kt)("p",null,"Para eliminar uno o m\xe1s documentos sin necesidad de cargarlos en memoria utiliza los m\xe9todos ",(0,r.kt)("inlineCode",{parentName:"p"},"deleteOne")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"deleteMany"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.deleteOne({ title: "Art\xedculo 1" }, function(err) {\n  if (err) return console.error(err);\n}):\n')),(0,r.kt)("h2",{id:"schemas"},"Schemas"),(0,r.kt)("p",null,"Todo en Mongoose inicia con la definici\xf3n del schema. Cada esquema define la estructura que van a tener los documentos de una colecci\xf3n. Por ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"let blogSchema = new Schema({\n  title:  String,\n  author: String,\n  body:   String,\n  comments: [{ body: String, date: Date }],\n  date: { type: Date, default: Date.now },\n  hidden: Boolean,\n  meta: {\n    votes: Number,\n    favs:  Number\n  }\n});\n")),(0,r.kt)("p",null,"Los tipos que se permiten dentro de un schema son:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"String"),(0,r.kt)("li",{parentName:"ul"},"Number"),(0,r.kt)("li",{parentName:"ul"},"Date"),(0,r.kt)("li",{parentName:"ul"},"Buffer (se utiliza para manejar datos binarios)"),(0,r.kt)("li",{parentName:"ul"},"Boolean"),(0,r.kt)("li",{parentName:"ul"},"Mixed (cualquier tipo)"),(0,r.kt)("li",{parentName:"ul"},"ObjectId (se utiliza para generar los ids)"),(0,r.kt)("li",{parentName:"ul"},"Array")),(0,r.kt)("p",null,"El schema tambi\xe9n define los m\xe9todos de instancia, m\xe9todos est\xe1ticos, indices secundarios y middleware."),(0,r.kt)("h3",{id:"m\xe9todos-de-instancia"},"M\xe9todos de instancia"),(0,r.kt)("p",null,"Cada instancia de un modelo representa un documento de MongoDB. Puedes agregar m\xe9todos a los modelos utilizando el objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"methods"),". Por ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'schema.methods.wordCount = function() {\n  return this.body.split(" ").length;\n};\n')),(0,r.kt)("p",null,"Y ya podemos utlizar el m\xe9todo sobre cualquier instancia de un modelo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'let article = new Article({ title: "Art1", body: "Hola Mundo"});\n\narticle.wordCount(); // 2\n')),(0,r.kt)("h3",{id:"m\xe9todos-est\xe1ticos"},"M\xe9todos est\xe1ticos"),(0,r.kt)("p",null,"Para agregar m\xe9todos directamente al modelo utiliza el objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"statics"),". Por ejemplo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"schema.statics.findByTitle = function(name, cb) {\n  return this.find({ title: new RegExp(name, 'i') }, cb);\n};\n")),(0,r.kt)("p",null,"Y ahora para utilizar el m\xe9todo est\xe1tico:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'Article.findByTitle("art", function(err, articles) {\n  console.log(articles);\n});\n')),(0,r.kt)("h3",{id:"\xedndices-secundarios"},"\xcdndices secundarios"),(0,r.kt)("p",null,"MongoDB soporta \xedndices secundarios (\xedndices sobre llaves diferente al ",(0,r.kt)("inlineCode",{parentName:"p"},"_id"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"let schema = mongoose.Schema({\n  title: String,\n  body: String,\n  tags: { type: [String], index: true }\n});\n")),(0,r.kt)("h3",{id:"atributos-virtuales"},"Atributos virtuales"),(0,r.kt)("p",null,"Puedes agregar atributos que no van a ser persistidos en la base de datos pero que puedes utilizar para aplicarle formato a otros campos o para combinar campos. Por ejemplo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'// el schema\nlet personSchema = new Schema({\n  name: {\n    first: String,\n    last: String\n  }\n});\n\n// el atributo virtual\npersonSchema.virtual("fullName")\n  .get(function() { return this.name.first + " " + this.name.last })\n  .set(function(v) {\n    this.name.first = v.substr(0, v.indexOf(" "));\n    this.name.last = v.substr(v.indexOf(" ") + 1);\n  });\n\n// compile our model\nlet Person = mongoose.model(\'Person\', personSchema);\n')),(0,r.kt)("p",null,"Veamos ahora c\xf3mo utilizar el atributo virtual:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// create a document\nlet pedro = new Person({\n  name: { first: 'Pedro', last: 'Perez' }\n});\n\n// utilicemos el atributo virtual\npedro.fullName; // \"Pedro Perez\"\n\n// cambiemos el nombre y apellido\npedro.fullName = \"Pablo Gomez\";\n")))}p.isMDXComponent=!0}}]);