"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[7333],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>k});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=t.createContext({}),s=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},c=function(e){var a=s(e.components);return t.createElement(p.Provider,{value:a},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,k=m["".concat(p,".").concat(d)]||m[d]||u[d]||l;return n?t.createElement(k,o(o({ref:a},c),{},{components:n})):t.createElement(k,o({ref:a},c))}));function k(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var p in a)hasOwnProperty.call(a,p)&&(i[p]=a[p]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1718:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var t=n(7462),r=(n(7294),n(3905));const l={},o="JSX",i={unversionedId:"react/jsx",id:"react/jsx",title:"JSX",description:"JSX \\(JavaScript XML\\) es la sintaxis que se utiliza para construir el markup de los componentes de React. Veamos un ejemplo tomado del c\xf3digo que genera create-react-app:",source:"@site/docs/react/jsx.md",sourceDirName:"react",slug:"/react/jsx",permalink:"/docs/react/jsx",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/react/jsx.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Primeros pasos",permalink:"/docs/react/primeros-pasos"},next:{title:"Componentes",permalink:"/docs/react/componentes"}},p={},s=[{value:"JSX se transforma en JavaScript",id:"jsx-se-transforma-en-javascript",level:2},{value:"Mezclando c\xf3digo JavaScript",id:"mezclando-c\xf3digo-javascript",level:2},{value:"Estilos inline",id:"estilos-inline",level:2},{value:"Eventos del DOM",id:"eventos-del-dom",level:2}],c={toc:s},m="wrapper";function u(e){let{components:a,...n}=e;return(0,r.kt)(m,(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"jsx"},"JSX"),(0,r.kt)("p",null," ",(0,r.kt)("strong",{parentName:"p"},"JSX")," ","(","JavaScript XML",")"," es la sintaxis que se utiliza para construir el markup de los componentes de React. Veamos un ejemplo tomado del c\xf3digo que genera ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/create-react-app"},"create-react-app"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<div className="App">\n  <header className="App-header">\n    <img src={logo} className="App-logo" alt="logo" />\n    <h1 className="App-title">Welcome to React</h1>\n  </header>\n  <p className="App-intro">\n    To get started, edit <code>src/App.js</code> and save to reload.\n  </p>\n</div>\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"JSX")," es similar a HTML pero con algunas diferencias importantes:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Se utiliza ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," en vez de ",(0,r.kt)("inlineCode",{parentName:"p"},"class")," para definir las clases de un elemento."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-markup"},' // mal\n <div class="active"></div>\n\n // bien\n <div className="active"></div>\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Todas las etiquetas deben estar cerradas con ",(0,r.kt)("inlineCode",{parentName:"p"},"/>")," o una etiqueta de cierre."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-markup"},' // mal\n <img src="...">\n <input type="text">\n\n // bien\n <img src="..." />\n <input type="text"></input>\n')))),(0,r.kt)("h2",{id:"jsx-se-transforma-en-javascript"},"JSX se transforma en JavaScript"),(0,r.kt)("p",null,"Por debajo ",(0,r.kt)("strong",{parentName:"p"},"JSX")," se transforma en c\xf3digo JavaScript. Por ejemplo, el siguiente c\xf3digo ",(0,r.kt)("strong",{parentName:"p"},"JSX")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<div class="active">Hola Mundo</div>\n')),(0,r.kt)("p",null,"se transforma en el siguiente c\xf3digo JavaScript:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"React.createElement('div', { className: 'active'},  'Hola mundo');\n")),(0,r.kt)("p",null,"Puedes utilizar el ",(0,r.kt)("a",{parentName:"p",href:"http://babeljs.io/repl/#?babili=false&browsers=&build=&builtIns=false&code_lz=DwEwlgbgBAxgNgQwM5ILwCIEwC6QKboB8AEgPaJQCyArgHYinAD04EhQA&debug=false&circleciRepo=&evaluate=true&lineWrap=false&presets=latest%2Creact%2Cstage-2&prettier=false&targets=&version=6.26.0"},"REPL de Babel")," para ver en qu\xe9 se convierte el c\xf3digo JSX que escribes."),(0,r.kt)("p",null,"La ventaja de ",(0,r.kt)("strong",{parentName:"p"},"JSX")," es que, como es JavaScript, podemos:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Ver algunos errores en tiempo de compilaci\xf3n.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Asignar ",(0,r.kt)("strong",{parentName:"p"},"JSX")," a variables. Por ejemplo:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"}," const elem = <p>Hola</p>;\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Retornar ",(0,r.kt)("strong",{parentName:"p"},"JSX")," desde m\xe9todos. Por ejemplo:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"}," renderText() {\n   if (someCondition) {\n     return <p>Hola</p>;\n   } else {\n     return <p>Mundo</p>;\n   }\n }\n")))),(0,r.kt)("p",null,"Una restricci\xf3n de ",(0,r.kt)("strong",{parentName:"p"},"JSX")," es que siempre debes tener un elemento ra\xedz:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// mal\nconst elem = <p>Hola</p><p>Mundo</p>;\n\n// bien\nconst elem = <div>\n    <p>Hola</p>\n    <p>Mundo</p>\n  </div>;\n")),(0,r.kt)("p",null,"Para no perder la indentaci\xf3n en el \xfaltimo ejemplo podemos utilizar par\xe9ntesis para escribir el ",(0,r.kt)("strong",{parentName:"p"},"JSX")," en una nueva l\xednea:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const elem = (\n  <div>\n    <p>Hola</p>\n    <p>Mundo</p>\n  </div>\n);\n")),(0,r.kt)("p",null,"Este es un patr\xf3n muy com\xfan en las aplicaciones de React."),(0,r.kt)("h2",{id:"mezclando-c\xf3digo-javascript"},"Mezclando c\xf3digo JavaScript"),(0,r.kt)("p",null,"Para mezclar c\xf3digo JavaScript en ",(0,r.kt)("strong",{parentName:"p"},"JSX")," utiliza corchetes ","(",(0,r.kt)("inlineCode",{parentName:"p"},"{}"),")",":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const style = "active";\nconst title = "Hola Mundo";\n\n<div className={style}>{title}</div>;\n')),(0,r.kt)("p",null,"Una restricci\xf3n de ",(0,r.kt)("strong",{parentName:"p"},"JSX")," es que no puedes utilizar ",(0,r.kt)("inlineCode",{parentName:"p"},"if"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"else"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"while")," o ",(0,r.kt)("inlineCode",{parentName:"p"},"for"),"."),(0,r.kt)("p",null,"Para agregar condicionales utiliza el operador ternario:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},"<div>\n  {condition ? <h1></h1> : null}\n</div>\n")),(0,r.kt)("p",null,"Para mostrar elementos de un arreglo o un objeto utiliza ",(0,r.kt)("inlineCode",{parentName:"p"},"map"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const names = ["Pedro", "Juan", "Germ\xe1n"];\n\nconst jsx = (\n  <ul>\n    {names.map((name) =>\n      <li>{name}</li>\n    )}\n  </ul>\n);\n')),(0,r.kt)("h2",{id:"estilos-inline"},"Estilos inline"),(0,r.kt)("p",null,"Es posible definir y utilizar estilos inline en ",(0,r.kt)("strong",{parentName:"p"},"JSX"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'let styles = {\n  borderColor: "#999"\n};\n\nconst jsx = (\n  <div style={styles}>\n    Hola mundo\n  </div>\n);\n')),(0,r.kt)("h2",{id:"eventos-del-dom"},"Eventos del DOM"),(0,r.kt)("p",null,"En ",(0,r.kt)("strong",{parentName:"p"},"JSX")," se utilizan los eventos est\xe1ndar del DOM como ",(0,r.kt)("inlineCode",{parentName:"p"},"onclick"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"onchange"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"onkeydown"),", etc. pero utilizando camelCase: ",(0,r.kt)("inlineCode",{parentName:"p"},"onClick"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"onChange"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"onKeyDown"),", etc. Por ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<button onClick={alert("Hola!")}></button>\n')),(0,r.kt)("p",null,"F\xedjate que utilizamos corchetes ","(",(0,r.kt)("inlineCode",{parentName:"p"},"{}"),")"," para escribir nuestro c\xf3digo JavaScript. Tambi\xe9n podr\xedamos pasar una funci\xf3n que es invocada cuando se genere el evento:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const saluda = () => alert("Hola!");\n\n<button onClick={saluda}></button>\n')),(0,r.kt)("p",null,"F\xedjate que no estamos invocando la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"saluda"),", s\xf3lo la estamos pasando para que React la invoque cuando ocurra el evento."))}u.isMDXComponent=!0}}]);