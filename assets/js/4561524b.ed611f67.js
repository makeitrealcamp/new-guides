"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[5825],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>k});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=o.createContext({}),u=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=u(e.components);return o.createElement(i.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,k=p["".concat(i,".").concat(m)]||p[m]||d[m]||r;return t?o.createElement(k,s(s({ref:n},l),{},{components:t})):o.createElement(k,s({ref:n},l))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,s=new Array(r);s[0]=m;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[p]="string"==typeof e?e:a,s[1]=c;for(var u=2;u<r;u++)s[u]=t[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9107:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var o=t(7462),a=(t(7294),t(3905));const r={},s="React Hooks",c={unversionedId:"react/react-hooks",id:"react/react-hooks",title:"React Hooks",description:"Los hooks nos permiten utilizar el estado y otras caracter\xedsticas de React sin necesidad de convertir nuestros componentes a clases.",source:"@site/docs/react/react-hooks.md",sourceDirName:"react",slug:"/react/react-hooks",permalink:"/docs/react/react-hooks",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/react/react-hooks.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Peticiones HTTP con Axios",permalink:"/docs/react/peticiones-http-con-axios"},next:{title:"React Router",permalink:"/docs/react/react-router"}},i={},u=[{value:"useState",id:"usestate",level:2},{value:"useEffect",id:"useeffect",level:2},{value:"Creando nuestro propio hook",id:"creando-nuestro-propio-hook",level:2},{value:"Reglas de los hooks",id:"reglas-de-los-hooks",level:2}],l={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"react-hooks"},"React Hooks"),(0,a.kt)("p",null,"Los ",(0,a.kt)("strong",{parentName:"p"},"hooks")," nos permiten utilizar el estado y otras caracter\xedsticas de React sin necesidad de convertir nuestros componentes a clases."),(0,a.kt)("p",null,"Algunas de las funcionalidades que podemos utilizar son: manejo del estado con ",(0,a.kt)("inlineCode",{parentName:"p"},"useState"),", manejo de efectos secundarios como peticiones ",(0,a.kt)("inlineCode",{parentName:"p"},"HTTP")," con ",(0,a.kt)("inlineCode",{parentName:"p"},"useEffect"),", crear referencias con ",(0,a.kt)("inlineCode",{parentName:"p"},"useRef"),", entre otras."),(0,a.kt)("h2",{id:"usestate"},"useState"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useState")," es el ",(0,a.kt)("strong",{parentName:"p"},"hook")," que nos permite crear un estado para nuestros componentes funci\xf3n. Recibe como argumento el valor inicial del estado. Retorna un arreglo, donde la primera posici\xf3n es el valor del estado, y la segunda posici\xf3n es una funci\xf3n que modifica el estado."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import React, { useState } from \'react\';\n\nconst Counter = () => {\n  // Usando desctructuring podemos nombrar las posiciones del arreglo\n  // [0] es el valor actual del estado\n  // [1] es la funci\xf3n encargada de reasignar el valor del estado\n  const [count, setCount] = useState(0);\n\n  return (\n    <div className="container">\n      <button\n        className="button"\n        onClick={() => setCount(count + 1)}\n      >\n        Click Me\n      </button>\n      <span className="content">Clicked {count} times</span>\n    </div>\n  );\n}\n')),(0,a.kt)("p",null,"En este caso el valor inicial del estado es ",(0,a.kt)("inlineCode",{parentName:"p"},"0"),". En la asignaci\xf3n del estado estamos haciendo un ",(0,a.kt)("inlineCode",{parentName:"p"},"destructuring")," del estado, la primera posici\xf3n la llamamos ",(0,a.kt)("inlineCode",{parentName:"p"},"count")," y la segunda posici\xf3n ",(0,a.kt)("inlineCode",{parentName:"p"},"setCount"),"."),(0,a.kt)("h2",{id:"useeffect"},"useEffect"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useEffect")," es  el ",(0,a.kt)("strong",{parentName:"p"},"hook")," que nos permite manejar efectos secundarios."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useEffect")," recibe 2 argumentos, el primero es una funci\xf3n que se ejecutara despu\xe9s de que el componente se renderic\xe9; el segundo argumento es un arreglo, este se conoce como las ",(0,a.kt)("strong",{parentName:"p"},"dependencias")," de nuestro hook, cuando el valor de alguna de las variables que nosotros agreguemos al arreglo de dependencias cambia, la funci\xf3n que pasamos como primer argumento es invocada nuevamente."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n\n  // Este useEffect no tiene dependecias\n  // Solo invoca las funci\xf3n despu\xe9s del primer renderizado.\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(response => response.json())\n      .then(json => setPosts(json));\n  }, []);\n\n  return (\n    posts.length > 0 && posts.map(({ id, title, body }) => (\n      <div className=\"post\" key={id}>\n        <h2>{title}</h2>\n        <p>{body}</p>\n      </div>\n    ))\n  );\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"En este caso estamos haciendo una petici\xf3n HTTP, cuando la respuesta es exitosa almacenamos la respuesta en el estado."),(0,a.kt)("li",{parentName:"ul"},"Podemos definir un arreglo vac\xedo, en este caso la funci\xf3n solo es invocada la primera vez que se renderiza el componente."),(0,a.kt)("li",{parentName:"ul"},"Si pasamos un segundo argumento al ",(0,a.kt)("inlineCode",{parentName:"li"},"useEffect"),", la funci\xf3n se invoca cada vez que el componente se actualiza. Ojo, puedes causar un ciclo infinito. Es recomendable pasar siempre al menos un arreglo vac\xedo.")),(0,a.kt)("h2",{id:"creando-nuestro-propio-hook"},"Creando nuestro propio hook"),(0,a.kt)("p",null,"Es posible crear nuestros propios ",(0,a.kt)("strong",{parentName:"p"},"hooks")," utilizando los ",(0,a.kt)("strong",{parentName:"p"},"hooks")," b\xe1sicos proporcionados por React. Para esto debemos crear una funci\xf3n, por convenci\xf3n su nombre debe empezar con ",(0,a.kt)("inlineCode",{parentName:"p"},"use")," y retornar los valores que queremos compartir. De esta manera podemos reutilizar funcionalida."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const useCount = (initialCount) => {\n  const [count, setCount] = useState(initialCount);\n\n  return [count, setCount];\n}\n\nconst CounterBy10 = () => {\n  const [count, setCount] = useCount(100);\n\n  return (\n    <div>\n      <button\n        type="button"\n        onClick={() => setCount(count + 10)}\n      >\n        Counter 1\n      </button>\n      <span>{count}</span>\n    </div>\n  );\n}\n\nconst CounterBy20 = () => {\n  const [count, setCount] = useCount(200);\n\n  return (\n    <div>\n      <button\n        type="button"\n        onClick={() => setCount(count + 20)}\n      >\n        Counter2\n      </button>\n      <span>{count}</span>\n    </div>\n  );\n}\n\nconst App = () => (\n  <>\n    <CounterBy10 />\n    <CounterBy20 />\n  </>\n);\n')),(0,a.kt)("h2",{id:"reglas-de-los-hooks"},"Reglas de los hooks"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"solo debes invocar un ",(0,a.kt)("strong",{parentName:"li"},"hook")," desde el nivel m\xe1s alto de una funci\xf3n. Esto quiere decir que un hook nunca debe de ser invocado dentro de un conditional, un ciclo, o una funci\xf3n anidada.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const App = () => {\n  // bien\n  const [name, setName] = useState('');\n\n  // mal\n  if (name !== 'Pedro') {\n    const [lastName, setLastName] = useState('P\xe9rez');\n  }\n}\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Los ",(0,a.kt)("strong",{parentName:"li"},"hooks")," no se deben invocar desde funciones de JavaScript. Esto quiere decir que solo debemos invocar los hooks desde componentes de React o ",(0,a.kt)("strong",{parentName:"li"},"hooks")," propios.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// bien\nconst Component = () => {\n  const [user, setUser] = useState(null);\n}\n\n// tambi\xe9n bien\nconst useCustomHook = () => {\n  const [count, setCount] = useState(0);\n\n  return [count, setCount]\n}\n\n//mal\nconst sum = (num1, num2) => {\n  const [value, setValue] = useState(0);\n\n  return num1 + num2;\n}\n")),(0,a.kt)("p",null,"Para una gu\xeda completa de los hooks visita la ",(0,a.kt)("a",{parentName:"p",href:"https://es.reactjs.org/docs/hooks-reference.html"},"Referencia de la API de los Hooks"),"."))}d.isMDXComponent=!0}}]);