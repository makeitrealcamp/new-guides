"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[3437],{3905:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>f});var a=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function t(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?t(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,a,o=function(e,r){if(null==e)return{};var n,a,o={},t=Object.keys(e);for(a=0;a<t.length;a++)n=t[a],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(a=0;a<t.length;a++)n=t[a],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var r=a.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},c=function(e){var r=p(e.components);return a.createElement(s.Provider,{value:r},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var n=e.components,o=e.mdxType,t=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||t;return n?a.createElement(f,i(i({ref:r},c),{},{components:n})):a.createElement(f,i({ref:r},c))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var t=n.length,i=new Array(t);i[0]=d;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<t;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7339:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const t={},i="Recursi\xf3n",l={unversionedId:"algoritmos/recursion",id:"algoritmos/recursion",title:"Recursi\xf3n",description:"La recursi\xf3n nos permite solucionar problemas que se pueden dividir en casos cada vez m\xe1s simples.",source:"@site/docs/algoritmos/recursion.md",sourceDirName:"algoritmos",slug:"/algoritmos/recursion",permalink:"/docs/algoritmos/recursion",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/algoritmos/recursion.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Estructuras de datos",permalink:"/docs/algoritmos/estructuras-de-datos"},next:{title:"ordenamiento",permalink:"/docs/algoritmos/ordenamiento"}},s={},p=[],c={toc:p},m="wrapper";function u(e){let{components:r,...n}=e;return(0,o.kt)(m,(0,a.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"recursi\xf3n"},"Recursi\xf3n"),(0,o.kt)("p",null,"La recursi\xf3n nos permite solucionar problemas que se pueden dividir en casos cada vez m\xe1s simples."),(0,o.kt)("p",null,"Por ejemplo, el factorial de un n\xfamero es la multiplicaci\xf3n de los n\xfameros (positivos) menores a ese n\xfamero. La notaci\xf3n que se utiliza para representar el factorial es el n\xfamero seguido de un signo de exclamaci\xf3n (",(0,o.kt)("inlineCode",{parentName:"p"},"!"),"). Por ejemplo ",(0,o.kt)("inlineCode",{parentName:"p"},"5!")," es igual a ",(0,o.kt)("inlineCode",{parentName:"p"},"120"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"5! = 5 * 4 * 3 * 2 * 1 = 120\n")),(0,o.kt)("p",null,"Sin embargo, ",(0,o.kt)("inlineCode",{parentName:"p"},"5!")," tambi\xe9n se podr\xeda expresar como:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"5! = 5 * 4!\n")),(0,o.kt)("p",null,"Esto es recursi\xf3n: solucionamos primero ",(0,o.kt)("inlineCode",{parentName:"p"},"4!")," y despu\xe9s lo multiplicamos por ",(0,o.kt)("inlineCode",{parentName:"p"},"5"),". Pero para solucionar ",(0,o.kt)("inlineCode",{parentName:"p"},"4!")," podemos solucionar primero ",(0,o.kt)("inlineCode",{parentName:"p"},"3!")," y multiplicarlo por ",(0,o.kt)("inlineCode",{parentName:"p"},"4"),". Y para solucionar ",(0,o.kt)("inlineCode",{parentName:"p"},"3!")," podemos solucionar ",(0,o.kt)("inlineCode",{parentName:"p"},"2!")," y multiplicarlo por ",(0,o.kt)("inlineCode",{parentName:"p"},"3"),". Y lo mismo con ",(0,o.kt)("inlineCode",{parentName:"p"},"2!"),": solucionamos ",(0,o.kt)("inlineCode",{parentName:"p"},"1!")," y lo multiplicamos por ",(0,o.kt)("inlineCode",{parentName:"p"},"2"),". El caso base es ",(0,o.kt)("inlineCode",{parentName:"p"},"1!")," que es ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,o.kt)("p",null,"La clave de la recursi\xf3n es que una funci\xf3n se puede llamar a s\xed misma como en el siguiente ejemplo que nunca terminar\xeda:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"function hola() {\n  hola();\n}\nhola();\n")),(0,o.kt)("p",null,"Cualquier ciclo se puede reescribir de forma recursiva y viceversa. Por ejemplo, podemos imprimir los n\xfameros del 1 al 10 de forma recursiva:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"function printNumber(x) {\n  console.log(x); // imprime el n\xfamero\n  if (x < 10) { printNumber(x + 1); }\n}\nprintNumber(1); // inicia la recursi\xf3n\n")),(0,o.kt)("p",null,"La \xfaltima l\xednea llama el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"printNumber")," pas\xe1ndole como par\xe1metro el n\xfamero ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),". Luego, en la l\xednea 2 imprimimos el n\xfamero y por \xfaltimo la funci\xf3n se llama a si misma si el n\xfamero es menor a ",(0,o.kt)("inlineCode",{parentName:"p"},"10"),"."),(0,o.kt)("p",null,"El ejemplo anterior ser\xeda mucho m\xe1s f\xe1cil con un ciclo normal:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"for (var i=1; i <= 10; i++) {\n  console.log(x);\n}\n")),(0,o.kt)("p",null,"Algunos problemas se adaptan mejor a ser solucionados por recursi\xf3n y otros por iteraci\xf3n."),(0,o.kt)("p",null,"Lo que debes tener en cuenta al crear una funci\xf3n recursiva es lo siguiente:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Definir los casos triviales, es decir, los casos en los que ",(0,o.kt)("strong",{parentName:"li"},"no")," se debe volver a invocar la funci\xf3n."),(0,o.kt)("li",{parentName:"ol"},"Definir los casos generales, es decir, los casos en los que ",(0,o.kt)("strong",{parentName:"li"},"s\xed")," se debe volver a invocar la funci\xf3n."),(0,o.kt)("li",{parentName:"ol"},"Verificar que los valores que se pasan como argumentos de la funci\xf3n cambien cada vez que se invoca (se deber\xedan acercar a los casos triviales).")))}u.isMDXComponent=!0}}]);