"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[651],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(t),d=o,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||r;return t?a.createElement(f,l(l({ref:n},s),{},{components:t})):a.createElement(f,l({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=d;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[u]="string"==typeof e?e:o,l[1]=c;for(var p=2;p<r;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5007:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var a=t(7462),o=(t(7294),t(3905));const r={},l="Componentes",c={unversionedId:"react/componentes",id:"react/componentes",title:"Componentes",description:"En React se introduce el concepto de componentes para crear la interfaz gr\xe1fica de nuestra aplicaci\xf3n.",source:"@site/docs/react/componentes.md",sourceDirName:"react",slug:"/react/componentes",permalink:"/docs/react/componentes",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/react/componentes.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"JSX",permalink:"/docs/react/jsx"},next:{title:"M\xe1s sobre estado",permalink:"/docs/react/mas-sobre-estado"}},i={},p=[{value:"Definiendo un componente",id:"definiendo-un-componente",level:2},{value:"Utilizando un componente",id:"utilizando-un-componente",level:2},{value:"Comunicaci\xf3n entre componentes",id:"comunicaci\xf3n-entre-componentes",level:2},{value:"El estado de un componente",id:"el-estado-de-un-componente",level:2}],s={toc:p},u="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"componentes"},"Componentes"),(0,o.kt)("p",null,"En React se introduce el concepto de ",(0,o.kt)("strong",{parentName:"p"},"componentes")," para crear la interfaz gr\xe1fica de nuestra aplicaci\xf3n."),(0,o.kt)("p",null,"El objetivo es que cada componente sea independiente y encapsule su markup ","(","JSX",")",", sus estilos ","(","CSS",")"," y su estado ","(","JavaScript",")",". De esa forma los componentes pueden ser reutilizables y la interfaz gr\xe1fica m\xe1s f\xe1cil de mantener y evolucionar."),(0,o.kt)("h2",{id:"definiendo-un-componente"},"Definiendo un componente"),(0,o.kt)("p",null,"Existen dos formas de definir componentes en React: con funciones o con clases. Sin embargo, cada vez se utilizan m\xe1s los componentes funci\xf3n que los componentes de clase, as\xed que utilizaremos por defecto componentes de funci\xf3n y dedicaremos una gu\xeda completa a componentes de clase."),(0,o.kt)("p",null,"La forma de definir una componente funci\xf3n es la siguiente:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"function Title() {\n  return <h1>Hola Mundo</h1>;\n};\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Nota:")," Tambi\xe9n podemos utilizar una funci\xf3n flecha para definir un componente."),(0,o.kt)("p",null,"Para retornar ",(0,o.kt)("strong",{parentName:"p"},"JSX")," en m\xfaltiples l\xedneas podemos encerrar todo entre par\xe9ntesis:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'function Title() {\n  return (\n    <header className="main">\n      <h1>Hola Mundo</h1>\n    </header>\n  );\n}\n')),(0,o.kt)("h2",{id:"utilizando-un-componente"},"Utilizando un componente"),(0,o.kt)("p",null,"Para utilizar un componente debes importarlo y despu\xe9s incluirlo en tu ",(0,o.kt)("strong",{parentName:"p"},"JSX")," como se muestra en el siguiente ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import React from "react";\nimport Title from "./Title"; // importarlo\n\nfunction App() {\n  // incluirlo\n  return <Title />;\n}\n')),(0,o.kt)("h2",{id:"comunicaci\xf3n-entre-componentes"},"Comunicaci\xf3n entre componentes"),(0,o.kt)("p",null,"Todo componente recibe un objeto llamado ",(0,o.kt)("inlineCode",{parentName:"p"},"props")," con los atributos que se le pasan a trav\xe9s de ",(0,o.kt)("strong",{parentName:"p"},"JSX"),". Por ejemplo, podemos pasar un atributo ",(0,o.kt)("inlineCode",{parentName:"p"},"name")," al componente ",(0,o.kt)("inlineCode",{parentName:"p"},"Welcome")," ","(","que en un momento vamos a definir",")",":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'<Welcome name="Pedro" />\n<Welcome name="Juan" />\n')),(0,o.kt)("p",null,"En los componentes funci\xf3n los ",(0,o.kt)("inlineCode",{parentName:"p"},"props")," se reciben como un par\xe1metro de la funci\xf3n:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"function Welcome(props) {\n  return <h1>{props.name}</h1>;\n};\n")),(0,o.kt)("p",null,"Generalmente se utiliza destructuraci\xf3n para recibir los ",(0,o.kt)("inlineCode",{parentName:"p"},"props"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"function Welcome({ name }) {\n  return <h1>{name}</h1>;\n}\n")),(0,o.kt)("h2",{id:"el-estado-de-un-componente"},"El estado de un componente"),(0,o.kt)("p",null,"Opcionalmente, un componente puede tener uno o m\xe1s estados para almacenar informaci\xf3n (temporal). Por ejemplo, dentro de un estado podemos almacenar un contador que vamos a incrementar cada vez que oprimamos un bot\xf3n."),(0,o.kt)("p",null,"El estado se crea a trav\xe9s de la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"useState"),", que retorna un arreglo con dos elementos: el estado y una funci\xf3n para modificar ese estado."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Nota:")," a ",(0,o.kt)("inlineCode",{parentName:"p"},"useState")," se le conoce como un ",(0,o.kt)("strong",{parentName:"p"},"hook")," en React, hablaremos de ",(0,o.kt)("strong",{parentName:"p"},"hooks")," en una gu\xeda m\xe1s adelante."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import React, { useState } from "react";\n\nfunction Welcome() {\n  const [title, setTitle] = useState("Hola Mundo")\n\n  return <h1>{title}</h1>;\n}\n')),(0,o.kt)("p",null,"En este ejemplo estamos definiendo un componente llamado ",(0,o.kt)("inlineCode",{parentName:"p"},"Welcome")," que inicializa el estado con el string ",(0,o.kt)("inlineCode",{parentName:"p"},'"Hola Mundo"'),". El estado tambi\xe9n puede ser un n\xfamero, un booleano, un arreglo o un objeto."),(0,o.kt)("p",null,"El estado nunca se modifica directamente, siempre se debe modificar con la funci\xf3n que encontramos en el segundo elemento del arreglo (",(0,o.kt)("inlineCode",{parentName:"p"},"setTitle")," en nuestro caso). Cada vez que se cambia el estado, React vuelve a renderizar ","(","pintar",")"," el componente en la vista."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// correcto\nsetTitle("Hello World");\n\n// incorrecto (el componente no se actualiza)\ntitle = "Hello World";\n')),(0,o.kt)("p",null,"Por ejemplo, podemos cambiar nuestro ejemplo anterior para que cuando hagan click sobre el ",(0,o.kt)("inlineCode",{parentName:"p"},"h1")," cambie el texto. Para eso vamos a definir una funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"updateText")," que vamos a invocar cuando hagan ",(0,o.kt)("inlineCode",{parentName:"p"},"click")," sobre el ",(0,o.kt)("inlineCode",{parentName:"p"},"h1"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'function Welcome() {\n  const [title, setTitle] = useState("Hola Mundo")\n\n  function updateText() {\n    setTitle("Hello World")\n  }\n\n  return <h1 onClick={updateText}>{title}</h1>;\n}\n')),(0,o.kt)("p",null,"Veamos el mismo ejemplo en Codepen, haz click sobre el ",(0,o.kt)("inlineCode",{parentName:"p"},"h1"),":"),(0,o.kt)("p",null,'{% embed url="',(0,o.kt)("a",{parentName:"p",href:"https://codepen.io/germanescobar/pen/xpZzrx%22"},'https://codepen.io/germanescobar/pen/xpZzrx"')," %}"))}m.isMDXComponent=!0}}]);