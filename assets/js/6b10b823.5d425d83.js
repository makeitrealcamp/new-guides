"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[3901],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(a),d=n,k=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return a?r.createElement(k,s(s({ref:t},c),{},{components:a})):r.createElement(k,s({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},551:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const o={},s="Primeros pasos",i={unversionedId:"redux/primeros-pasos",id:"redux/primeros-pasos",title:"Primeros pasos",description:"El primer paso para trabajar con Redux es instalar la librer\xeda con npm o Yarn:",source:"@site/docs/redux/primeros-pasos.md",sourceDirName:"redux",slug:"/redux/primeros-pasos",permalink:"/docs/redux/primeros-pasos",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/redux/primeros-pasos.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Redux",permalink:"/docs/redux/"},next:{title:"Action creators",permalink:"/docs/redux/action-creators"}},l={},p=[],c={toc:p},u="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"primeros-pasos"},"Primeros pasos"),(0,n.kt)("p",null,"El primer paso para trabajar con Redux es instalar la librer\xeda con npm o Yarn:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"# npm\nnpm install --save redux\n\n# yarn\nyarn add redux\n")),(0,n.kt)("p",null,"El componente principal de Redux es el ",(0,n.kt)("strong",{parentName:"p"},"store"),", que va a contener el estado compartido de nuestra aplicaci\xf3n. Para crear un ",(0,n.kt)("strong",{parentName:"p"},"store")," se utiliza el m\xe9todo ",(0,n.kt)("inlineCode",{parentName:"p"},"createStore"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const store = createStore();\n")),(0,n.kt)("p",null,"El m\xe9todo ",(0,n.kt)("inlineCode",{parentName:"p"},"createStore")," recibe dos argumentos. El primero es una funci\xf3n, llamada ",(0,n.kt)("strong",{parentName:"p"},"funci\xf3n reductora"),", que es la que se va a encargar de hacer cambios sobre el estado. El segundo argumento es el estado inicial de nuestra aplicaci\xf3n. Por ejemplo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const reducer = (state, action) => {\n  return state;\n};\n\nconst store = createStore(reducer, { tasks: []\xa0});\n")),(0,n.kt)("p",null,"Las ",(0,n.kt)("strong",{parentName:"p"},"funciones reductoras")," reciben el estado actual del ",(0,n.kt)("strong",{parentName:"p"},"store")," y una ",(0,n.kt)("strong",{parentName:"p"},"acci\xf3n")," (un objeto), y retornan un nuevo objeto que va a reemplazar el estado del ",(0,n.kt)("strong",{parentName:"p"},"store"),"."),(0,n.kt)("p",null,"La ",(0,n.kt)("strong",{parentName:"p"},"funci\xf3n reductora")," no se invoca directamente. Para invocar la ",(0,n.kt)("strong",{parentName:"p"},"funci\xf3n reductora")," se utiliza el m\xe9todo ",(0,n.kt)("inlineCode",{parentName:"p"},"dispatch")," del ",(0,n.kt)("strong",{parentName:"p"},"store"),", que recibe un objeto. Generalmente se utiliza la llave ",(0,n.kt)("inlineCode",{parentName:"p"},"type")," para saber qu\xe9 cambios hacer sobre el estado en la ",(0,n.kt)("strong",{parentName:"p"},"funci\xf3n reductora"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'store.dispatch({ type: "CLEAR_TASKS" });\n')),(0,n.kt)("p",null,"Por debajo, el ",(0,n.kt)("strong",{parentName:"p"},"store")," invoca la ",(0,n.kt)("strong",{parentName:"p"},"funci\xf3n reductora")," pas\xe1ndole el estado actual como primer argumento y el objeto que recibi\xf3 en el ",(0,n.kt)("inlineCode",{parentName:"p"},"dispatch")," como segundo argumento. La funci\xf3n reductora utiliza la llave ",(0,n.kt)("inlineCode",{parentName:"p"},"type")," para saber qu\xe9 cambios hacer sobre el estado:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'const reducer = (state, action) => {\n  if (action.type == "NEW_TASK") {\n    // retorna el estado con una nueva tarea\n  } else if (action.type == "REMOVE_TASK") {\n    // retorna el estado eliminando una tarea\n  } else if (action.type == "CLEAR_TASKS") {\n    return { tasks: [] };\n  }\n\n  return state;\n};\n')),(0,n.kt)("p",null,"Adem\xe1s de la llave ",(0,n.kt)("inlineCode",{parentName:"p"},"type"),", podemos enviar m\xe1s informaci\xf3n en ese objeto que le pasamos al ",(0,n.kt)("inlineCode",{parentName:"p"},"dispatch"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'store.dispatch({ type: "NEW_TASK", task: { id: 1, title: "Nueva tarea" } });\n')),(0,n.kt)("p",null,"La ",(0,n.kt)("strong",{parentName:"p"},"funci\xf3n reductora")," ahora puede utilizar esa informaci\xf3n adicional:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'const reducer = (state, action) => {\n  if (action.type == "NEW_TASK") {\n    return { tasks: state.tasks.concat(action.task) }\n  } else if (action.type == "REMOVE_TASK") {\n    // retorna el estado eliminando una tarea\n  } else if (action.type == "CLEAR_TASKS") {\n    return { tasks: [] };\n  }\n\n  return state;\n};\n')),(0,n.kt)("p",null,"La ",(0,n.kt)("strong",{parentName:"p"},"funci\xf3n reductora")," siempre deber\xeda retornar un nuevo objeto si va a realizar cambios sobre el estado, nunca realizar cambios sobre el estado (el primer argumento que recibe la funci\xf3n)."),(0,n.kt)("p",null,"Para obtener el estado actual del ",(0,n.kt)("strong",{parentName:"p"},"store")," se utiliza el m\xe9todo ",(0,n.kt)("inlineCode",{parentName:"p"},"getState"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"store.getState(); // { tasks: [] } o el estado que est\xe9 en ese momento\n")),(0,n.kt)("p",null,"Para escuchar cambios sobre el ",(0,n.kt)("strong",{parentName:"p"},"store")," se utiliza el m\xe9todo ",(0,n.kt)("inlineCode",{parentName:"p"},"subscribe"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'store.subscribe(() =>\n  console.log("El nuevo estado es: ", store.getState())\n)\n')),(0,n.kt)("p",null,"Para resumir:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Un ",(0,n.kt)("strong",{parentName:"li"},"store")," se crea con el m\xe9todo ",(0,n.kt)("inlineCode",{parentName:"li"},"createStore"),", que recibe una ",(0,n.kt)("strong",{parentName:"li"},"funci\xf3n reductora")," y un estado inicial."),(0,n.kt)("li",{parentName:"ol"},"Todos los cambios al estado est\xe1n centralizados en la ",(0,n.kt)("strong",{parentName:"li"},"funci\xf3n reductora"),", que recibe un estado y una ",(0,n.kt)("strong",{parentName:"li"},"acci\xf3n"),", y retorna un nuevo estado."),(0,n.kt)("li",{parentName:"ol"},"El ",(0,n.kt)("strong",{parentName:"li"},"store")," expone tres m\xe9todos: ",(0,n.kt)("inlineCode",{parentName:"li"},"dispatch"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"subscribe")," y ",(0,n.kt)("inlineCode",{parentName:"li"},"getState"),". ",(0,n.kt)("inlineCode",{parentName:"li"},"dispatch")," se utiliza para invocar la ",(0,n.kt)("strong",{parentName:"li"},"funci\xf3n reductora"),". ",(0,n.kt)("inlineCode",{parentName:"li"},"subscribe")," se utiliza para escuchar cambios al estado, y ",(0,n.kt)("inlineCode",{parentName:"li"},"getState")," se utiliza para obtener el estado actual.")),(0,n.kt)("p",null,"El estado puede ser desde un tipo b\xe1sico de JavaScript (enteros, booleanos, etc.), un arreglo, o un objeto (sin importar lo complejo que sea)."),(0,n.kt)("p",null,"En aplicaciones reales el estado es generalmente un objeto y una de las cr\xedticas a Redux es que ese objeto se puede volver muy grande y dif\xedcil de mantener."),(0,n.kt)("p",null,"Otra cr\xedtica a Redux es que la ",(0,n.kt)("strong",{parentName:"p"},"funci\xf3n constructura")," se puede volver grande e inmanejable cuando se tengan muchos tipos de ",(0,n.kt)("strong",{parentName:"p"},"acciones"),". Sin embargo, m\xe1s adelante vamos a ver c\xf3mo dividir la ",(0,n.kt)("strong",{parentName:"p"},"funci\xf3n constructora")," en funciones m\xe1s manejables."),(0,n.kt)("p",null,"{% youtube %} ",(0,n.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=RZNNu2pO49g"},"https://www.youtube.com/watch?v=RZNNu2pO49g")," {% endyoutube %}"),(0,n.kt)("p",null,"{% youtube %} ",(0,n.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=aaMoVAcP5-w"},"https://www.youtube.com/watch?v=aaMoVAcP5-w")," {% endyoutube %}"))}m.isMDXComponent=!0}}]);