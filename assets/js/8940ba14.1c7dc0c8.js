"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[9623],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>g});var r=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var i=r.createContext({}),c=function(e){var a=r.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},u=function(e){var a=c(e.components);return r.createElement(i.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=t,g=p["".concat(i,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(g,l(l({ref:a},u),{},{components:n})):r.createElement(g,l({ref:a},u))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s[p]="string"==typeof e?e:t,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3278:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),t=(n(7294),n(3905));const o={},l="M\xe1s sobre estado",s={unversionedId:"react/mas-sobre-estado",id:"react/mas-sobre-estado",title:"M\xe1s sobre estado",description:"En un componente funcional se puede crear un estado utilizando useState. Esta funci\xf3n retorna un arreglo con dos elementos:",source:"@site/docs/react/mas-sobre-estado.md",sourceDirName:"react",slug:"/react/mas-sobre-estado",permalink:"/docs/react/mas-sobre-estado",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/react/mas-sobre-estado.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Componentes",permalink:"/docs/react/componentes"},next:{title:"Formularios",permalink:"/docs/react/formularios"}},i={},c=[{value:"Arreglos y objetos",id:"arreglos-y-objetos",level:2},{value:"Arreglos",id:"arreglos",level:2},{value:"Insertando elementos",id:"insertando-elementos",level:3},{value:"Cambiando un elemento",id:"cambiando-un-elemento",level:3},{value:"Removiendo un elemento",id:"removiendo-un-elemento",level:3},{value:"Objetos",id:"objetos",level:2},{value:"Agregando y modificando propiedades",id:"agregando-y-modificando-propiedades",level:3}],u={toc:c},p="wrapper";function d(e){let{components:a,...n}=e;return(0,t.kt)(p,(0,r.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"m\xe1s-sobre-estado"},"M\xe1s sobre estado"),(0,t.kt)("p",null,"En un componente funcional se puede crear un estado utilizando ",(0,t.kt)("inlineCode",{parentName:"p"},"useState"),". Esta funci\xf3n retorna un arreglo con dos elementos:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"El estado"),(0,t.kt)("li",{parentName:"ul"},"Una funci\xf3n para modificar el estado")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},'import React, { useState } from "react";\n\nfunction Welcome() {\n  const [counter, setCounter] = useState("Hola Mundo") // define el estado con un valor inicial\n\n  return <h1>{counter}</h1>;\n}\n')),(0,t.kt)("p",null,"El estado es ",(0,t.kt)("strong",{parentName:"p"},"de s\xf3lo lectura"),", no debes modificar directamente como en el siguiente ejemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"// mal - no hagas esto\ncounter = 2;\n")),(0,t.kt)("p",null,"Para modificar el estado utiliza la funci\xf3n que retorna el ",(0,t.kt)("inlineCode",{parentName:"p"},"useState"),", en nuestro ejemplo ser\xeda ",(0,t.kt)("inlineCode",{parentName:"p"},"setCounter"),". "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"setCounter(2);\n")),(0,t.kt)("p",null,"Cuando la modificaci\xf3n de un estado depende del estado anterior se debe hacer de la siguiente forma para evitar problemas de asincron\xeda:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"setCounter(prevCounter => prevCounter++);\n")),(0,t.kt)("p",null,"En vez de pasarle un valor al ",(0,t.kt)("inlineCode",{parentName:"p"},"setCounter")," le estamos pasando una funci\xf3n que recibe el estado y retorna un nuevo estado."),(0,t.kt)("h2",{id:"arreglos-y-objetos"},"Arreglos y objetos"),(0,t.kt)("p",null,"Cuando el estado es un arreglo o un objeto hay que tener cuidado porque cada vez que se modifica ese estado se crea un nuevo arreglo u objeto. A esto se le conoce como ",(0,t.kt)("a",{parentName:"p",href:"https://es.wikipedia.org/wiki/Objeto_inmutable"},"inmutabilidad"),". La idea es que los cambios al estado sean expl\xedcitos y predecibles, y las aplicaciones m\xe1s f\xe1ciles de mantener en el tiempo."),(0,t.kt)("p",null,"Acostumbrarse a escribir c\xf3digo inmutable toma alg\xfan tiempo pero es una buena pr\xe1ctica. En esta gu\xeda vamos a ver algunas t\xe9cnicas para manipular arreglos y objetos de forma inmutable."),(0,t.kt)("h2",{id:"arreglos"},"Arreglos"),(0,t.kt)("p",null,"En vez de modificar el arreglo original para insertar, actualizar y eliminar elementos, lo que vamos a hacer es construir un ",(0,t.kt)("strong",{parentName:"p"},"nuevo")," arreglo con el cambio. Veamos c\xf3mo hacerlo."),(0,t.kt)("p",null,"Para los siguientes ejemplos vamos a suponer que tenemos un componente con el siguiente estado:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const [arr, setArr] = useState([1, 2, 3]);\n")),(0,t.kt)("h3",{id:"insertando-elementos"},"Insertando elementos"),(0,t.kt)("p",null,"Para insertar un elemento a un arreglo utiliza el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"concat")," que retorna un nuevo arreglo con el nuevo elemento:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"// bien\nsetArr(arr => arr.concat(4)); // crea un nuevo arreglo\n\n// mal\nsetArr(arr => arr.push(4)); // modifica el arreglo original\n")),(0,t.kt)("h3",{id:"cambiando-un-elemento"},"Cambiando un elemento"),(0,t.kt)("p",null,"Existen varias formas de cambiar un elemento de forma inmutable. La primera es con el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"map"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"// duplicar todos los elementos\nsetArr(arr => arr.map(n => n * 2));\n\n// duplicar s\xf3lo el elemento en la posici\xf3n 1\nconst idx = 1;\nsetArr(arr => arr.map((n, i) => i === idx ? n * 2 : n));\n")),(0,t.kt)("p",null,"La segunda es utilizando el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"slice")," y ",(0,t.kt)("inlineCode",{parentName:"p"},"concat"),". Por ejemplo si queremos cambiar la segunda posici\xf3n por un ",(0,t.kt)("inlineCode",{parentName:"p"},"5"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const idx = 1;\nsetArr(arr => {\n  return arr.slice(0, idx)\n              .concat(5)\n              .concat(arr.slice(idx + 1));\n})\n")),(0,t.kt)("p",null,"La tercera es con el nuevo operador ",(0,t.kt)("inlineCode",{parentName:"p"},"...")," ","(","spread",")"," de JavaScript:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const idx = 1;\nsetArr(arr => {\n  return [...arr.slice(0, idx), 5, ...arr.slice(idx + 1)];\n});\n")),(0,t.kt)("h3",{id:"removiendo-un-elemento"},"Removiendo un elemento"),(0,t.kt)("p",null,"Puedes remover un elemento de forma inmutable de varias formas. La primera es con el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"filter"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const idx = 1;\nsetArr(arr => arr.filter(e, i) => i !== idx);\n")),(0,t.kt)("p",null,"La segunda es utilizando el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"slice")," y ",(0,t.kt)("inlineCode",{parentName:"p"},"concat"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const idx = 1;\nsetArr(arr => arr.slice(0, idx).concat(arr.slice(idx + 1)))\n")),(0,t.kt)("p",null,"La tercera es con el nuevo operador ",(0,t.kt)("inlineCode",{parentName:"p"},"...")," ","(","spread",")",":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const idx = 1;\nsetArr(arr => {\n  return [...arr.slice(0, idx), ...arr.slice(idx + 1)];\n})\n")),(0,t.kt)("h2",{id:"objetos"},"Objetos"),(0,t.kt)("p",null,"Con los objetos pasa algo similar que con los arreglos. En vez de modificarlos directamente vamos a crear un nuevo objeto cada vez que necesitamos hacer una modificaci\xf3n."),(0,t.kt)("p",null,"Para los siguientes ejemplos vamos a suponer que tenemos un componente con el siguiente estado:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const [obj, setObj] = useState({ a: 1, b: 2, c: 3 });\n")),(0,t.kt)("h3",{id:"agregando-y-modificando-propiedades"},"Agregando y modificando propiedades"),(0,t.kt)("p",null,"Para agregar o modificar propiedades en los objetos utiliza el operador ",(0,t.kt)("inlineCode",{parentName:"p"},"...")," ","(","spread",")"," de JavaScript:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"// agregar una propiedad\nsetObj(obj => { ...obj, d: 4 });\n\n// modificar una propiedad\nsetObj(obj => { ..., c: 5 });\n")))}d.isMDXComponent=!0}}]);