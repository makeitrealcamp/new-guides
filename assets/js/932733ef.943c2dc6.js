"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[3126],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>g});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=n.createContext({}),i=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},c=function(e){var a=i(e.components);return n.createElement(p.Provider,{value:a},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=i(t),m=r,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||s;return t?n.createElement(g,o(o({ref:a},c),{},{components:t})):n.createElement(g,o({ref:a},c))}));function g(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=m;var l={};for(var p in a)hasOwnProperty.call(a,p)&&(l[p]=a[p]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var i=2;i<s;i++)o[i]=t[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3326:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>i});var n=t(7462),r=(t(7294),t(3905));const s={},o="Rutas",l={unversionedId:"nodejs/express/rutas",id:"nodejs/express/rutas",title:"Rutas",description:"Las rutas determinan la forma en que la aplicaci\xf3n va a responder cuando se reciba una petici\xf3n HTTP. Cada ruta se compone de un m\xe9todo HTTP, un path y una funci\xf3n que se va a encargar de responder cuando la petici\xf3n coincida con el m\xe9todo y el path.",source:"@site/docs/nodejs/express/rutas.md",sourceDirName:"nodejs/express",slug:"/nodejs/express/rutas",permalink:"/docs/nodejs/express/rutas",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/nodejs/express/rutas.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"El protocolo HTTP",permalink:"/docs/nodejs/express/el-protocolo-http"},next:{title:"Vistas",permalink:"/docs/nodejs/express/vistas"}},p={},i=[{value:"Escribiendo el cuerpo, c\xf3digo de respuesta y los encabezados",id:"escribiendo-el-cuerpo-c\xf3digo-de-respuesta-y-los-encabezados",level:2},{value:"Query string",id:"query-string",level:2},{value:"Par\xe1metros de ruta",id:"par\xe1metros-de-ruta",level:2},{value:"Sirviendo archivos est\xe1ticos",id:"sirviendo-archivos-est\xe1ticos",level:2}],c={toc:i},u="wrapper";function d(e){let{components:a,...t}=e;return(0,r.kt)(u,(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rutas"},"Rutas"),(0,r.kt)("p",null,"Las rutas determinan la forma en que la aplicaci\xf3n va a responder cuando se reciba una petici\xf3n HTTP. Cada ruta se compone de un ",(0,r.kt)("inlineCode",{parentName:"p"},"m\xe9todo HTTP"),", un path y una funci\xf3n que se va a encargar de responder cuando la petici\xf3n coincida con el m\xe9todo y el path."),(0,r.kt)("p",null,'Por ejemplo, la siguiente ruta responde con el texto "Hola Mundo" cuando se recibe una petici\xf3n GET a la ra\xedz de la aplicaci\xf3n:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"app.get('/', (req, res) => {\n  res.send('<h1>Hola Mundo</h1>')\n})\n")),(0,r.kt)("p",null,"La primera ruta que coincide con la petici\xf3n es la que se ejecuta."),(0,r.kt)("p",null,"El siguiente ejemplo coincidir\xeda con las peticiones ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," y el path ",(0,r.kt)("inlineCode",{parentName:"p"},"/users"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"app.post('/users', (req, res) => {\n  res.send(\"Recibimos un POST a /users\");\n})\n")),(0,r.kt)("p",null,"La funci\xf3n que se pasa como ",(0,r.kt)("strong",{parentName:"p"},"callback")," de cada ruta recibe dos objetos, generalmente nombrados ",(0,r.kt)("inlineCode",{parentName:"p"},"req")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"res"),"."),(0,r.kt)("p",null,"El primer argumento ","(",(0,r.kt)("inlineCode",{parentName:"p"},"req"),")"," representa la petici\xf3n HTTP y tiene propiedades para acceder el cuerpo del mensaje, los encabezados, el query string, etc. La lista completa de propiedades la encuentras en ",(0,r.kt)("a",{parentName:"p",href:"https://expressjs.com/en/4x/api.html#req"},"este enlace"),"."),(0,r.kt)("p",null,"El segundo argumento ","(",(0,r.kt)("inlineCode",{parentName:"p"},"res"),")"," representa el mensaje de respuesta que Express le va a enviar al cliente. A continuaci\xf3n vamos a ver c\xf3mo utilizar este objeto para escribir el cuerpo, los encabezados y el c\xf3digo de respuesta, pero la lista completa de propiedades y m\xe9todos la encuentas en ",(0,r.kt)("a",{parentName:"p",href:"https://expressjs.com/en/4x/api.html#res"},"este enlace"),"."),(0,r.kt)("h2",{id:"escribiendo-el-cuerpo-c\xf3digo-de-respuesta-y-los-encabezados"},"Escribiendo el cuerpo, c\xf3digo de respuesta y los encabezados"),(0,r.kt)("p",null,"Para escribir el cuerpo de la respuesta utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"res.send"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'res.send("Este es el cuerpo del mensaje");\n')),(0,r.kt)("p",null,"Por defecto, Express devuelve el c\xf3digo de respuesta ",(0,r.kt)("inlineCode",{parentName:"p"},"200 OK"),". Si necesitas cambiarlo puedes usar ",(0,r.kt)("inlineCode",{parentName:"p"},"res.status")," de la siguiente forma:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"res.status(404);\n")),(0,r.kt)("p",null,"Tambi\xe9n puedes anidar el llamado con ",(0,r.kt)("inlineCode",{parentName:"p"},"send"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"res.status(404).send(\"No se encontr\xf3 el recurso solicitado\");\n\n// otra opci\xf3n\nres.sendStatus(200); // equivalente a res.status(200).send('OK')\nres.sendStatus(403); // equivalente a res.status(403).send('Forbidden')\nres.sendStatus(404); // equivalente a res.status(404).send('Not Found')\nres.sendStatus(500); // equivalente a res.status(500).send('Internal Server Error')\n")),(0,r.kt)("p",null,"Para escribir encabezados utiliza ",(0,r.kt)("inlineCode",{parentName:"p"},"res.set"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"res.set('Content-Type', 'text/plain');\n\nres.set({\n  'Content-Type': 'text/plain',\n  'Content-Length': '123',\n  'ETag': '12345'\n});\n")),(0,r.kt)("h2",{id:"query-string"},"Query string"),(0,r.kt)("p",null,"El ",(0,r.kt)("strong",{parentName:"p"},"query string")," es lo que va despu\xe9s del signo de interrogaci\xf3n ","(",(0,r.kt)("inlineCode",{parentName:"p"},"?"),")"," en un URL. ",(0,r.kt)("strong",{parentName:"p"},"Express")," autom\xe1ticamente almacena las propiedades en el objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"req.query"),". Por ejemplo, para obtener el valor de la propiedad ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," utilizar\xedamos ",(0,r.kt)("inlineCode",{parentName:"p"},"req.query.name")," como se muestra en el siguiente ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"app.get('/', (req, res) => {\n  res.send(\"Hola \" + req.query.name);\n});\n")),(0,r.kt)("p",null,"Con esta ruta, si ingresas a ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:3000/?name=Pedro"),' vas a ver el texto "Hola Pedro".'),(0,r.kt)("h2",{id:"par\xe1metros-de-ruta"},"Par\xe1metros de ruta"),(0,r.kt)("p",null,"Los par\xe1metros de ruta son segmentos en la URL que se usan para capturar valores del usuario. Los valores capturados son almacenados en el objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"req.params"),". En el siguiente ejemplo estamos definiendo un par\xe1metro llamado ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," que obtenemos con ",(0,r.kt)("inlineCode",{parentName:"p"},"req.params.name"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"app.get('/user/:name', (req, res) => {\n  res.send('Hola ' + req.params.name);\n})\n")),(0,r.kt)("p",null,"Con esta ruta, si ingresas a ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:3000/user/Pedro"),' vas a ver el texto "Hola Pedro".'),(0,r.kt)("h2",{id:"sirviendo-archivos-est\xe1ticos"},"Sirviendo archivos est\xe1ticos"),(0,r.kt)("p",null,"Con Express puedes servir archivos est\xe1ticos como im\xe1genes, CSS, JavaScript, etc. Simplemente debes almacenarlos en una carpeta dentro de tu aplicaci\xf3n ","(","p.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"public"),")"," y agregar la siguiente l\xednea a tu aplicaci\xf3n en ",(0,r.kt)("inlineCode",{parentName:"p"},"app.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"app.use(express.static('public'));\n")),(0,r.kt)("p",null,"Esa l\xednea la puedes agregar en cualquier parte despu\xe9s de definir la variable ",(0,r.kt)("inlineCode",{parentName:"p"},"app")," y antes de llamar ",(0,r.kt)("inlineCode",{parentName:"p"},"app.listen"),". Sin embargo, se recomienda ubicarla antes de definir las rutas:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express');\nconst app = express();\n\napp.use(express.static('public'));\n\n// ac\xe1 ir\xedan las rutas\n\napp.listen(3000, () => console.log('Listening on port 3000!'));\n")),(0,r.kt)("p",null,"Para acceder a los archivos estaticos omite el nombre de la carpeta:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"http://localhost:3000/images/kitten.jpg\nhttp://localhost:3000/css/style.css\nhttp://localhost:3000/js/app.js\n")),(0,r.kt)("p",null,"Si quieres que los archivos est\xe1ticos tengan un prefijo ","(","p.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"/static"),")"," puedes modificar la l\xednea de la siguiente forma:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"app.use('/static', express.static('public'))\n")),(0,r.kt)("p",null,"Ahora puedes acceder a los archivos est\xe1ticos utilizando el prefijo ",(0,r.kt)("inlineCode",{parentName:"p"},"/static"),". Por ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"http://localhost:3000/static/images/kitten.jpg\nhttp://localhost:3000/static/css/style.css\nhttp://localhost:3000/static/js/app.js\n")),(0,r.kt)("p",null,"En vez de definir la carpeta de forma relativa, una mejor pr\xe1ctica es utilizar la ruta absoluta por si alguien ejecuta la aplicaci\xf3n desde otra carpeta. Modifica la l\xednea de la siguiente forma:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"app.use(express.static(path.join(__dirname, 'public')));\n")))}d.isMDXComponent=!0}}]);