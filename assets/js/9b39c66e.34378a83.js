"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[6006],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>h});var n=t(7294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=n.createContext({}),d=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},p=function(e){var a=d(e.components);return n.createElement(l.Provider,{value:a},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(t),m=s,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||r;return t?n.createElement(h,i(i({ref:a},p),{},{components:t})):n.createElement(h,i({ref:a},p))}));function h(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=t.length,i=new Array(r);i[0]=m;var o={};for(var l in a)hasOwnProperty.call(a,l)&&(o[l]=a[l]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var d=2;d<r;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7066:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=t(7462),s=(t(7294),t(3905));const r={sidebar_position:8},i="Stashing (guardando cambios)",o={unversionedId:"git/stashing",id:"git/stashing",title:"Stashing (guardando cambios)",description:"Stashing es una funcionalidad de git que nos permite tomar los archivos modificados del espacio de trabajo y guardarlos en un espacio temporal (llamado el stash) que despu\xe9s podemos recuperar.",source:"@site/docs/git/stashing.md",sourceDirName:"git",slug:"/git/stashing",permalink:"/docs/git/stashing",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/git/stashing.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"docsSidebar",previous:{title:"Reescribiendo la historia",permalink:"/docs/git/reescribiendo-la-historia"},next:{title:"Github",permalink:"/docs/git/github"}},l={},d=[{value:"Agregando cambios al stash",id:"agregando-cambios-al-stash",level:3},{value:"Listando las entradas en el stash",id:"listando-las-entradas-en-el-stash",level:3},{value:"Recuperando cambios del stash",id:"recuperando-cambios-del-stash",level:3},{value:"Ver los cambios de una entrada del stash",id:"ver-los-cambios-de-una-entrada-del-stash",level:3},{value:"Creando una rama a partir del stash",id:"creando-una-rama-a-partir-del-stash",level:3},{value:"Eliminando una entrada del stash",id:"eliminando-una-entrada-del-stash",level:3}],p={toc:d},u="wrapper";function c(e){let{components:a,...t}=e;return(0,s.kt)(u,(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"stashing-guardando-cambios"},"Stashing (guardando cambios)"),(0,s.kt)("p",null,"Stashing es una funcionalidad de ",(0,s.kt)("strong",{parentName:"p"},"git")," que nos permite tomar los archivos modificados del espacio de trabajo y guardarlos en un espacio temporal (llamado el ",(0,s.kt)("strong",{parentName:"p"},"stash"),") que despu\xe9s podemos recuperar."),(0,s.kt)("p",null,"Stashing es muy \xfatil cuando estamos en la mitad de un cambio y debemos cambiarnos a otra rama (p.e. porque surgi\xf3 algo urgente que debemos solucionar). En vez de crear un commit temporal, podemos guardar nuestros cambios en el ",(0,s.kt)("strong",{parentName:"p"},"stash")," temporalmente y, m\xe1s adelante, recuperarlos para seguir trabajando en ellos."),(0,s.kt)("p",null,"Es posible tener m\xfaltiples grupos de cambios (entradas) en el ",(0,s.kt)("strong",{parentName:"p"},"stash"),", pero es importante no abusar del ",(0,s.kt)("strong",{parentName:"p"},"stash"),". En general deber\xedas guardar una \xfanica una entrada en el ",(0,s.kt)("strong",{parentName:"p"},"stash"),"."),(0,s.kt)("h3",{id:"agregando-cambios-al-stash"},"Agregando cambios al stash"),(0,s.kt)("p",null,"Para almacenar los archivos modificados de tu espacio de trabajo utiliza el comando ",(0,s.kt)("inlineCode",{parentName:"p"},"git stash"),". Nuestra recomendaci\xf3n es ejecutar ",(0,s.kt)("inlineCode",{parentName:"p"},"git add")," antes de ejecutar ",(0,s.kt)("inlineCode",{parentName:"p"},"git stash")," porque los nuevos archivos no quedar\xeda en el stash:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"git add .\ngit stash\n")),(0,s.kt)("p",null,"Si haces un ",(0,s.kt)("inlineCode",{parentName:"p"},"git status")," despu\xe9s de un ",(0,s.kt)("strong",{parentName:"p"},"stash")," vas a ver que no hay cambios en tu espacio de trabajo."),(0,s.kt)("h3",{id:"listando-las-entradas-en-el-stash"},"Listando las entradas en el stash"),(0,s.kt)("p",null,"Para ver la lista de entradas que existen en el stash (se crea una nueva entrada cada vez que haces ",(0,s.kt)("inlineCode",{parentName:"p"},"git stash"),") ejecuta el siguiente comando:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"git stash list\nstash@{0}: WIP on master: 5002d47 Crea el nuevo landing\nstash@{1}: WIP on rama-1: 7a834c0 Modifica la p\xe1gina de productos\nstash@{2}: WIP on master: f67239a Elimina la p\xe1gina de contacto\n")),(0,s.kt)("p",null,"Cada l\xednea representa un grupo de cambios y muestra: un identificador del stash, la rama y el \xfaltimo commit que exist\xeda cuando hicimos el stash."),(0,s.kt)("h3",{id:"recuperando-cambios-del-stash"},"Recuperando cambios del stash"),(0,s.kt)("p",null,"Para recuperar los cambios del stash existen dos comandos que puedes utilizar: ",(0,s.kt)("inlineCode",{parentName:"p"},"git stash pop")," y ",(0,s.kt)("inlineCode",{parentName:"p"},"git stash apply"),"."),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"git stash pop")," aplica los \xfaltimos cambios que agregaste al stash (",(0,s.kt)("inlineCode",{parentName:"p"},"stash@{0}"),") y elimina esa entrada del stash. ",(0,s.kt)("inlineCode",{parentName:"p"},"git stash apply")," es similar pero mantiene la entrada en el stash."),(0,s.kt)("p",null,"Si quieres aplicar los cambios de otra entrada utiliza el identificador, por ejemplo, el siguiente comando tomar\xeda la segunda entrada en el stash, aplicar\xeda los cambios y eliminar\xeda la entrada:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"git stash pop stash@{1}\n")),(0,s.kt)("p",null,"Lo mismo podr\xedamos hacer con apply, la \xfanica diferencia es que la entrada no se eliminar\xeda (quedar\xeda en el stash):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"git stash apply stash@{1}\n")),(0,s.kt)("h3",{id:"ver-los-cambios-de-una-entrada-del-stash"},"Ver los cambios de una entrada del stash"),(0,s.kt)("p",null,"Si quieres ver los cambios que existen en una entrada del stash utiliza el comando ",(0,s.kt)("inlineCode",{parentName:"p"},"git stash show -p")," seguido del identificador de la entrada. Por ejemplo, para ver la segunda entrada del stash ejecutar\xedamos:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'$ git stash show -p stash@{0}\ndiff --git a/style.css b/style.css\nnew file mode 100644\nindex 0000000..d92368b\n--- /dev/null\n+++ b/style.css\n@@ -0,0 +1,3 @@\n+* {\n+ text-decoration: blink;\n+}\ndiff --git a/index.html b/index.html\nindex 9daeafb..ebdcbd2 100644\n--- a/index.html\n+++ b/index.html\n@@ -1 +1,2 @@\n+<link rel="stylesheet" href="style.css"/>\n')),(0,s.kt)("p",null,"Si omites el identificador se muestra la \xfaltima entrada."),(0,s.kt)("h3",{id:"creando-una-rama-a-partir-del-stash"},"Creando una rama a partir del stash"),(0,s.kt)("p",null,"Para crear una rama a partir de una entrada del stash utiliza el comando ",(0,s.kt)("inlineCode",{parentName:"p"},"git stash branch")," seguido del nombre de la nueva rama y el identificador del stash. Por ejemplo, para crear una rama llamada ",(0,s.kt)("inlineCode",{parentName:"p"},"rama-stash")," a partir de la segunda entrada del stash ejecuta:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"git stash branch rama-stash stash@{1}\n")),(0,s.kt)("h3",{id:"eliminando-una-entrada-del-stash"},"Eliminando una entrada del stash"),(0,s.kt)("p",null,"Si ya no necesitas alguna entrada en el stash, puedes eliminarla con el comando ",(0,s.kt)("inlineCode",{parentName:"p"},"git stash drop")," seguido del identificador de la entrada. Por ejemplo, para eliminar la segunda entrada ejecuta:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"git stash drop stash@{1}\n")),(0,s.kt)("p",null,"O puedes eliminar todas las entradas del stash con el siguiente comando:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"git stash clear\n")))}c.isMDXComponent=!0}}]);