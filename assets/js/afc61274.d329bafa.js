"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[1480],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>v});var a=r(7294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var c=a.createContext({}),s=function(e){var n=a.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},u=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(r),m=t,v=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return r?a.createElement(v,o(o({ref:n},u),{},{components:r})):a.createElement(v,o({ref:n},u))}));function v(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[d]="string"==typeof e?e:t,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1075:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=r(7462),t=(r(7294),r(3905));const i={},o="Manipulaci\xf3n de archivos",l={unversionedId:"nodejs/manipulacion-de-archivos",id:"nodejs/manipulacion-de-archivos",title:"Manipulaci\xf3n de archivos",description:"En Node.js es posible manipular archivos \\(crear, leer, modificar, mover, etc.\\). En este cap\xedtulo vamos a ver tres de estas operaciones: leer, escribir y verificar si un archivo o carpeta existe.",source:"@site/docs/nodejs/manipulacion-de-archivos.md",sourceDirName:"nodejs",slug:"/nodejs/manipulacion-de-archivos",permalink:"/docs/nodejs/manipulacion-de-archivos",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/nodejs/manipulacion-de-archivos.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Instalaci\xf3n",permalink:"/docs/nodejs/instalacion"},next:{title:"Express.js",permalink:"/docs/nodejs/express/"}},c={},s=[{value:"Leer de un archivo",id:"leer-de-un-archivo",level:2},{value:"Leyendo archivos grandes",id:"leyendo-archivos-grandes",level:3},{value:"Escribir a un archivo",id:"escribir-a-un-archivo",level:2},{value:"Escribiendo a un archivo l\xednea por l\xednea",id:"escribiendo-a-un-archivo-l\xednea-por-l\xednea",level:3},{value:"Verificar si un archivo o una carpeta existen",id:"verificar-si-un-archivo-o-una-carpeta-existen",level:2}],u={toc:s},d="wrapper";function p(e){let{components:n,...r}=e;return(0,t.kt)(d,(0,a.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"manipulaci\xf3n-de-archivos"},"Manipulaci\xf3n de archivos"),(0,t.kt)("p",null,"En Node.js es posible manipular archivos ","(","crear, leer, modificar, mover, etc.",")",". En este cap\xedtulo vamos a ver tres de estas operaciones: leer, escribir y verificar si un archivo o carpeta existe."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota:")," Ten en cuenta que esto s\xf3lo aplica para Node.js, desde el navegador ",(0,t.kt)("strong",{parentName:"p"},"no")," es posible manipular archivos, ser\xeda muy inseguro."),(0,t.kt)("h2",{id:"leer-de-un-archivo"},"Leer de un archivo"),(0,t.kt)("p",null,"La forma m\xe1s f\xe1cil de leer un archivo con Node.js es utilizando el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"readFile")," del m\xf3dulo ",(0,t.kt)("inlineCode",{parentName:"p"},"fs"),". Para empezar crea un nuevo archivo llamado ",(0,t.kt)("inlineCode",{parentName:"p"},"contenido.txt")," con el siguiente contenido:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-text"},"Primera l\xednea\nSegunda l\xednea\nTercera l\xednea\n")),(0,t.kt)("p",null,"Ahora crea un archivo en la misma carpeta llamado ",(0,t.kt)("inlineCode",{parentName:"p"},"read.js")," con el siguiente contenido:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"let fs = require('fs');\n\nfs.readFile('contenido.txt', 'utf8', function(err, data) {\n  if (err) {\n    return console.log(err);\n  }\n\n  console.log(data);\n});\n")),(0,t.kt)("p",null,"Ejec\xfatalo en la consola, deber\xeda mostrar el contenido del archivo y una l\xednea en blanco al final:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-text"},"$ node read.js\nPrimera l\xednea\nSegunda l\xednea\nTercera l\xednea\n")),(0,t.kt)("p",null,"El m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"readFile")," recibe 3 argumentos: la ruta al archivo, la codificaci\xf3n y una funci\xf3n que va a ser invocada cuando se lea el archivo ","(","a esta funci\xf3n se le llama ",(0,t.kt)("strong",{parentName:"p"},"callback"),")","."),(0,t.kt)("h3",{id:"leyendo-archivos-grandes"},"Leyendo archivos grandes"),(0,t.kt)("p",null,"El m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"readFile")," lee todo el archivo en memoria. El problema es que si el archivo es muy grande es posible que la m\xe1quina no tenga la suficiente memoria para leerlo."),(0,t.kt)("p",null,"Si el archivo es muy grande es mejor utilizar la siguiente forma:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"let fs = require('fs'),\n    readline = require('readline');\n\nlet reader = readline.createInterface({\n  input: fs.createReadStream('archivo-grande.txt')\n});\n\nreader.on('line', function (line) {\n  console.log(line);\n});\n")),(0,t.kt)("h2",{id:"escribir-a-un-archivo"},"Escribir a un archivo"),(0,t.kt)("p",null,"La forma m\xe1s f\xe1cil de de escribir a un archivo es con el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"writeFile")," del m\xf3dulo ",(0,t.kt)("inlineCode",{parentName:"p"},"fs"),". Por ejemplo, crea un archivo llamado ",(0,t.kt)("inlineCode",{parentName:"p"},"write.js")," y transcribe el siguiente c\xf3digo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},'let fs = require(\'fs\');\n\nfs.writeFile("nuevo.txt", "Primera l\xednea\\nSegunda l\xednea", function(err) {\n  if (err) {\n    return console.log(err);\n  }\n\n  console.log("El archivo fue creado correctamente");\n});\n')),(0,t.kt)("p",null,"Ejec\xfatalo en la consola y revisa que el archivo haya sido creado correctamente:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"$ node write.js\nEl archivo fue creado correctamente\n")),(0,t.kt)("p",null,"El m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"writeFile")," recibe tres argumentos: la ruta del archivo que quieres crear, el contenido y una funci\xf3n que se invoca cuando ha terminado de escribir el archivo o ha ocurrido un error."),(0,t.kt)("h3",{id:"escribiendo-a-un-archivo-l\xednea-por-l\xednea"},"Escribiendo a un archivo l\xednea por l\xednea"),(0,t.kt)("p",null,"Si necesitas escribir un archivo l\xednea por l\xednea puedes utilizar la siguiente forma:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},'let fs = require(\'fs\');\n\nlet stream = fs.createWriteStream("nuevo.txt");\nstream.once(\'open\', function(fd) {\n  stream.write("Primera l\xednea\\n");\n  stream.write("Segunda l\xednea\\n");\n  stream.end();\n});\n')),(0,t.kt)("h2",{id:"verificar-si-un-archivo-o-una-carpeta-existen"},"Verificar si un archivo o una carpeta existen"),(0,t.kt)("p",null,"Para verificar si un archivo o carpeta existe utiliza el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"stat")," del m\xf3dulo ",(0,t.kt)("inlineCode",{parentName:"p"},"fs"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},'let fs = require("fs");\n\nfs.stat(\'nuevo.txt\', function(err) {\n  if (err == null) {\n    console.log("El archivo existe");\n  } else if (err.code == \'ENOENT\') {\n    console.log("el archivo no existe");\n  } else {\n    console.log(err); // ocurri\xf3 alg\xfan error\n  }\n})\n')))}p.isMDXComponent=!0}}]);