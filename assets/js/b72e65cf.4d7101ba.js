"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[4848],{3905:(e,a,n)=>{n.d(a,{Zo:()=>m,kt:()=>g});var t=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),c=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},m=function(e){var a=c(e.components);return t.createElement(s.Provider,{value:a},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=o,g=d["".concat(s,".").concat(u)]||d[u]||p[u]||i;return n?t.createElement(g,r(r({ref:a},m),{},{components:n})):t.createElement(g,r({ref:a},m))}));function g(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[d]="string"==typeof e?e:o,r[1]=l;for(var c=2;c<i;c++)r[c]=n[c];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3204:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=n(7462),o=(n(7294),n(3905));const i={sidebar_position:3},r="Conceptos y comandos esenciales",l={unversionedId:"git/conceptos-comandos-esenciales",id:"git/conceptos-comandos-esenciales",title:"Conceptos y comandos esenciales",description:"El primer paso para trabajar con git es inicializar el repositorio. Un repositorio no es m\xe1s que una carpeta oculta llamada .git que va a estar en la ra\xedz del proyecto y que va a contener todo el historial de cambios.",source:"@site/docs/git/conceptos-comandos-esenciales.md",sourceDirName:"git",slug:"/git/conceptos-comandos-esenciales",permalink:"/docs/git/conceptos-comandos-esenciales",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/git/conceptos-comandos-esenciales.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Instalaci\xf3n y configuraci\xf3n",permalink:"/docs/git/instalacion-configuracion"},next:{title:"Ignorando archivo y carpetas",permalink:"/docs/git/gitignore"}},s={},c=[{value:"Commits",id:"commits",level:2},{value:"El historial de commits",id:"el-historial-de-commits",level:3},{value:"El estado del repositorio",id:"el-estado-del-repositorio",level:2},{value:"Agregando un archivo al index",id:"agregando-un-archivo-al-index",level:3},{value:"Removiendo un archivo del index",id:"removiendo-un-archivo-del-index",level:3},{value:"Descartando cambios",id:"descartando-cambios",level:3},{value:"Explorando los cambios",id:"explorando-los-cambios",level:3},{value:"Resumen de comandos",id:"resumen-de-comandos",level:2}],m={toc:c},d="wrapper";function p(e){let{components:a,...i}=e;return(0,o.kt)(d,(0,t.Z)({},m,i,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"conceptos-y-comandos-esenciales"},"Conceptos y comandos esenciales"),(0,o.kt)("p",null,"El primer paso para trabajar con git es inicializar el ",(0,o.kt)("strong",{parentName:"p"},"repositorio"),". Un ",(0,o.kt)("strong",{parentName:"p"},"repositorio")," no es m\xe1s que una carpeta oculta llamada ",(0,o.kt)("inlineCode",{parentName:"p"},".git")," que va a estar en la ra\xedz del proyecto y que va a contener todo el historial de cambios."),(0,o.kt)("p",null,"Para inicializar un ",(0,o.kt)("strong",{parentName:"p"},"repositorio")," ingresa a la carpeta del proyecto y ejecuta el siguiente comando:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git init\n")),(0,o.kt)("p",null,"Este comando crea la carpeta oculta ",(0,o.kt)("inlineCode",{parentName:"p"},".git")," con algunos archivos y carpetas; s\xf3lo se debe ejecutar una \xfanica vez por proyecto."),(0,o.kt)("p",null,"A los archivos y carpetas del proyecto (todo lo que est\xe9 por fuera de la carpeta ",(0,o.kt)("inlineCode",{parentName:"p"},".git"),") se les llama el ",(0,o.kt)("strong",{parentName:"p"},"espacio de trabajo"),"."),(0,o.kt)("h2",{id:"commits"},"Commits"),(0,o.kt)("p",null,"Una vez que el repositorio ha sido inicializado puedes empezar a crear ",(0,o.kt)("strong",{parentName:"p"},"commits"),". Un ",(0,o.kt)("strong",{parentName:"p"},"commit")," es una fotograf\xeda de tu proyecto en un momento determinado."),(0,o.kt)("p",null,"Para crear un commit ejecuta los siguientes dos comandos:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git add .\ngit commit -m 'Ac\xe1 va el mensaje describiendo los cambios'\n")),(0,o.kt)("p",null,"El primer comando, ",(0,o.kt)("inlineCode",{parentName:"p"},"git add ."),", le dice a ",(0,o.kt)("strong",{parentName:"p"},"git")," que incluya todos los cambios en el siguiente ",(0,o.kt)("strong",{parentName:"p"},"commit"),". Un cambio puede ser: un archivo nuevo, un archivo modificado, un archivo eliminado o un archivo movido a otra ubicaci\xf3n. M\xe1s adelante veremos c\xf3mo seleccionar individualmente los cambios que queremos incluir en el siguiente ",(0,o.kt)("strong",{parentName:"p"},"commit"),"."),(0,o.kt)("p",null,"El segundo comando, ",(0,o.kt)("inlineCode",{parentName:"p"},"git commit")," es el que crea el commit. Cada ",(0,o.kt)("strong",{parentName:"p"},"commit")," tiene la siguiente informaci\xf3n:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Un identificador (una cadena larga de caracteres)"),(0,o.kt)("li",{parentName:"ul"},"Un autor (nombre y correo electr\xf3nico)"),(0,o.kt)("li",{parentName:"ul"},"Una fecha"),(0,o.kt)("li",{parentName:"ul"},"Un mensaje que describe el commit (lo escribe uno cuando crea el commit)"),(0,o.kt)("li",{parentName:"ul"},"Los cambios desde el \xfaltimo commit.")),(0,o.kt)("p",null,"Tambi\xe9n es posible escribir varias l\xedneas en el mensaje de commit. Si omites la opci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"-m")," se abrir\xe1 el editor de texto por defecto para que ingreses el mensaje:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git commit\n")),(0,o.kt)("h3",{id:"el-historial-de-commits"},"El historial de commits"),(0,o.kt)("p",null,"Para ver el historial de commits utiliza el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"git log"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ git log\ncommit 7844a6552c2f838db7b7bed81f7be61e4b51ac84\nAuthor: Pedro Perez <pedro@gmail.com>\nDate:   Sun Jan 19 15:33:49 2020 -0500\n\n    Modifica el landing principal\n\ncommit fc3b5612f0e23158263ad1a47d91d6c8f84f1a1f\nAuthor: Pedro Perez <pedro@gmail.com>\nDate:   Sun Jan 19 14:43:21 2020 -0500\n\n    Crea el landing principal\n\ncommit a4fcb6a1c87958a64e305c302757b591822b7075\nAuthor: Pedro Perez <pedro@gmail.com>\nDate:   Sun Jan 19 14:23:20 2020 -0500\n\n    Primer commit\n\n")),(0,o.kt)("p",null,"Este comando muestra los ",(0,o.kt)("strong",{parentName:"p"},"commits")," en orden descendente (primero los m\xe1s recientes)."),(0,o.kt)("p",null,"Puedes utilizar la opci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"--oneline")," para ver una versi\xf3n resumida que muestra los primeros 7 caracteres del identificador y el mensaje de cada ",(0,o.kt)("strong",{parentName:"p"},"commit"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ git log --oneline\n7844a65 Modifica el landing principal\nfc3b561 Crea el landing principal\na4fcb6a Primer commit\n")),(0,o.kt)("p",null,"Para ver un commit espec\xedfico utiliza ",(0,o.kt)("inlineCode",{parentName:"p"},"git show")," seguido del identificador del commit (puedes utilizar los primeros 7 caracteres). Este comando, adem\xe1s de la informaci\xf3n del commit, muestra la lista de cambios."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ git show fc3b561\ncommit fc3b5612f0e23158263ad1a47d91d6c8f84f1a1f\nAuthor: Pedro Perez <pedro@gmail.com>\nDate:   Sun Jan 19 14:43:21 2020 -0500\n\n    Crea el landing principal\n\ndiff --git a/index.html b/index.html\nindex 1196288..fe8ec0c 100644\n--- a/index.html\n+++ b/index.html\n@@ -1,2 +1,2 @@\n Esta l\xednea ya estaba\n+Esta l\xednea se agreg\xf3\n-Esta l\xednea se elimin\xf3\n")),(0,o.kt)("p",null,"Cada cambio empieza con la l\xednea ",(0,o.kt)("inlineCode",{parentName:"p"},"diff --git"),". En este ejemplo s\xf3lo tenemos un cambio (el archivo ",(0,o.kt)("inlineCode",{parentName:"p"},"index.html"),"). En las \xfaltimas l\xedneas vemos qu\xe9 cambio: una l\xednea se agreg\xf3 (la que empieza con ",(0,o.kt)("inlineCode",{parentName:"p"},"+"),") y otra se elimin\xf3 (la que empieza con ",(0,o.kt)("inlineCode",{parentName:"p"},"-"),"). Generalmente en la consola aparecen las nuevas l\xedneas en verde y las que se eliminaron en rojo."),(0,o.kt)("h2",{id:"el-estado-del-repositorio"},"El estado del repositorio"),(0,o.kt)("p",null,"Utiliza el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"git status")," para ver el estado del ",(0,o.kt)("strong",{parentName:"p"},"repositorio"),": los nuevos archivos, archivos modificados, archivos eliminados, los cambios que se van a incluir en el pr\xf3ximo ",(0,o.kt)("strong",{parentName:"p"},"commit"),", etc."),(0,o.kt)("p",null,"Cuando el repositorio no tiene cambios vas a ver algo as\xed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ git status\nOn branch master\nnothing to commit, working tree clean\n")),(0,o.kt)("p",null,"Si hay cambios, ",(0,o.kt)("inlineCode",{parentName:"p"},"git status")," muestra tres secciones:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Archivos que se van a incluir en el siguiente commit (a esto se le conoce como el ",(0,o.kt)("strong",{parentName:"li"},"index"),")."),(0,o.kt)("li",{parentName:"ol"},"Archivos modificados o eliminados que a\xfan no est\xe1n en el index (no ser\xedan inclu\xeddos en el siguiente commit)."),(0,o.kt)("li",{parentName:"ol"},"Nuevos archivos.")),(0,o.kt)("p",null,"La siguiente imagen muestra un ejemplo de ",(0,o.kt)("inlineCode",{parentName:"p"},"git status")," que tiene las tres secciones:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Git status",src:n(519).Z,width:"731",height:"465"})),(0,o.kt)("p",null,"Sin embargo, si alguna secci\xf3n no tiene archivos, esa secci\xf3n no se muestra al ejecutar ",(0,o.kt)("inlineCode",{parentName:"p"},"git status"),"."),(0,o.kt)("p",null,"Cada secci\xf3n nos muestra algunos comandos que podemos utilizar para pasar los archivos de un estado a otro. Veamos las operaciones m\xe1s comunes:"),(0,o.kt)("h3",{id:"agregando-un-archivo-al-index"},"Agregando un archivo al index"),(0,o.kt)("p",null,"El ",(0,o.kt)("strong",{parentName:"p"},"index")," es el espacio que contiene los cambios que se van a incluir en el siguiente commit."),(0,o.kt)("p",null,"Para agregar un archivo nuevo o modificado al index utiliza el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"git add")," seguido del nombre del archivo (puedes incluir varios archivos separados por espacio). Por ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git add index.html\n")),(0,o.kt)("p",null,"Este comando agregar\xeda el archivo ",(0,o.kt)("inlineCode",{parentName:"p"},"index.html")," al ",(0,o.kt)("strong",{parentName:"p"},"index")," (asumiendo que el archivo es nuevo, tiene cambios o fue eliminar) y aparecer\xeda en la primera secci\xf3n del ",(0,o.kt)("inlineCode",{parentName:"p"},"git status"),"."),(0,o.kt)("p",null,"Para agregar todos los cambios utiliza el comando:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git add .\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"S\xf3lo los archivos que est\xe9n en el index ser\xe1n inclu\xeddos en el siguiente commit"),"."),(0,o.kt)("h3",{id:"removiendo-un-archivo-del-index"},"Removiendo un archivo del index"),(0,o.kt)("p",null,"Si agregaste un archivo al ",(0,o.kt)("strong",{parentName:"p"},"index")," y despu\xe9s deseas removerlo, es decir, ya no lo quieres incluir en el siguiente commit, puedes utilizar el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"git reset HEAD")," seguido del nombre del archivo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git reset HEAD index.html\n")),(0,o.kt)("p",null,"Este comando remueve el archivo ",(0,o.kt)("inlineCode",{parentName:"p"},"index.html")," del ",(0,o.kt)("strong",{parentName:"p"},"index"),". Los cambios no se pierden pero los cambios de ese archivo no se incluir\xe1n en el siguiente commit y el archivo aparecer\xe1 en la secci\xf3n de archivos modificados del ",(0,o.kt)("inlineCode",{parentName:"p"},"git status"),"."),(0,o.kt)("h3",{id:"descartando-cambios"},"Descartando cambios"),(0,o.kt)("p",null,"Si quieres descartar los cambios de un archivo completamente, es decir, volver a como se encontraba en el \xfaltimo ",(0,o.kt)("strong",{parentName:"p"},"commit"),", utiliza el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"git checkout --")," seguido del nombre del archivo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git checkout -- index.html\n")),(0,o.kt)("p",null,"Para que este comando funcione, el archivo se debe encontrar fuera del ",(0,o.kt)("strong",{parentName:"p"},"index"),". Si el archivo est\xe1 en el ",(0,o.kt)("strong",{parentName:"p"},"index")," debes removerlo (como se muestra en la secci\xf3n anterior) antes ejecutar este comando."),(0,o.kt)("h3",{id:"explorando-los-cambios"},"Explorando los cambios"),(0,o.kt)("p",null,"Para ver los cambios que a\xfan no est\xe1n en el index utiliza el siguiente comando:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git diff\n")),(0,o.kt)("p",null,"Para ver los cambios que est\xe1n en el index utiliza:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git diff --staged\n")),(0,o.kt)("p",null,"El resultado de ",(0,o.kt)("inlineCode",{parentName:"p"},"git diff")," (con o sin la opci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"--staged"),") es igual a lo que vimos previamente en la secci\xf3n estado del repositorio con el comando ",(0,o.kt)("inlineCode",{parentName:"p"},"git show"),"."),(0,o.kt)("h2",{id:"resumen-de-comandos"},"Resumen de comandos"),(0,o.kt)("p",null,"En esta secci\xf3n vamos a hacer un resumen de los comandos que hemos visto hasta ahora:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git init")," - inicializa un repositorio."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git add")," - agrega archivos al index."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git commit")," - crea un commit, s\xf3lo los archivos que est\xe9n en el index ser\xe1n inclu\xeddos en el commit."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git log")," - muestra el historial de commits."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git show")," - muestra la informaci\xf3n de un commit espec\xedfico incluyendo los cambios que se realizaron en ese commit."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git status")," - muestra el estado del repositorio."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git reset HEAD")," - remueve uno o m\xe1s archivos del index."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git checkout --")," - descarta los cambios que se hicieron a uno o m\xe1s archivos."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git diff")," - muestra los cambios que est\xe1n en los archivos modificados o en el index (con la opci\xf3n ",(0,o.kt)("inlineCode",{parentName:"li"},"--staged"),").")))}p.isMDXComponent=!0},519:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/git-status-f05c68c0e078bc7fd50d84100d4ee7bd.png"}}]);