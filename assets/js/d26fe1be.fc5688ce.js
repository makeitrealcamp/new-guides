"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[7844],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>g});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),p=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},c=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?t.createElement(g,l(l({ref:a},c),{},{components:n})):t.createElement(g,l({ref:a},c))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5374:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var t=n(7462),r=(n(7294),n(3905));const o={},l="Testing",i={unversionedId:"react/testing",id:"react/testing",title:"Testing",description:"Para escribir pruebas automatizadas en nuestras aplicaciones en React vamos a utilizar una librer\xeda llamada React Testing Library (a veces abreviado RTL).",source:"@site/docs/react/testing.md",sourceDirName:"react",slug:"/react/testing",permalink:"/docs/react/testing",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/react/testing.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"React Bootstrap",permalink:"/docs/react/react-bootstrap"},next:{title:"Componentes de Clase",permalink:"/docs/react/componentes-clase"}},s={},p=[{value:"Configuraci\xf3n",id:"configuraci\xf3n",level:2},{value:"Ejecutando pruebas",id:"ejecutando-pruebas",level:2},{value:"Escribiendo la primera prueba",id:"escribiendo-la-primera-prueba",level:2},{value:"Encontrando elementos",id:"encontrando-elementos",level:2},{value:"Interactuando con los elementos",id:"interactuando-con-los-elementos",level:2},{value:"Validando los elementos",id:"validando-los-elementos",level:2},{value:"Debugging",id:"debugging",level:2}],c={toc:p},u="wrapper";function m(e){let{components:a,...n}=e;return(0,r.kt)(u,(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"testing"},"Testing"),(0,r.kt)("p",null,"Para escribir pruebas automatizadas en nuestras aplicaciones en React vamos a utilizar una librer\xeda llamada ",(0,r.kt)("a",{parentName:"p",href:"https://testing-library.com/docs/react-testing-library/intro"},"React Testing Library")," (a veces abreviado RTL)."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://testing-library.com/docs/react-testing-library/intro"},"React Testing Library")," no reemplaza ",(0,r.kt)("a",{parentName:"p",href:"https://facebook.github.io/jest/"},"Jest"),", que seguimos necesitando para definir y correr nuestras pruebas, sino que nos ofrece objetos y m\xe9todos para renderizar, interactuar y validar nuestro c\xf3digo de React."),(0,r.kt)("h2",{id:"configuraci\xf3n"},"Configuraci\xf3n"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://testing-library.com/docs/react-testing-library/intro"},"React Testing Library")," viene inclu\xeddo con ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/create-react-app"},"create-react-app"),". En otras configuraciones que no est\xe9 inclu\xeddo debemos instalar las siguientes librer\xedas manualmente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"# npm\nnpm install --save-dev jest @testing-library/react @testing-library/jest-dom \n\n# Yarn\nyarn add jest @testing-library/react @testing-library/jest-dom --dev\n")),(0,r.kt)("p",null,"El siguiente paso es crear un archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"src/setupTests.js")," con el siguiente contenido:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import '@testing-library/jest-dom';\n")),(0,r.kt)("h2",{id:"ejecutando-pruebas"},"Ejecutando pruebas"),(0,r.kt)("p",null,"Para ejecutar las pruebas vas a utilizar el siguiente comando:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"# npm\nnpm test\n\n# Yarn\nyarn test\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota:")," En ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebook/create-react-app"},"create-react-app"),' este comando deja un proceso corriendo que ejecuta las pruebas cada vez que cambia el c\xf3digo. Puedes oprimir "a" para ejecutar todas las pruebas y "q" para salir.'),(0,r.kt)("h2",{id:"escribiendo-la-primera-prueba"},"Escribiendo la primera prueba"),(0,r.kt)("p",null,"Escribamos una prueba que renderice un componente ",(0,r.kt)("inlineCode",{parentName:"p"},"App")," y verifique que tenga un texto espec\xedfico:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { render, screen } from "@testing-library/react"\nimport App from "./App"\n\ntest("renders text", () => {\n  render(<App />)\n  expect(screen.getByText(/learn react/i)).toBeInTheDocument()\n})\n')),(0,r.kt)("p",null,"La primera l\xednea importa algunos objetos de React Testing Library que vamos a necesitar en la prueba: ",(0,r.kt)("inlineCode",{parentName:"p"},"render")," para renderizar el componente y ",(0,r.kt)("inlineCode",{parentName:"p"},"screen")," para buscar el elemento."),(0,r.kt)("p",null,"La segunda l\xednea importa el componente ",(0,r.kt)("inlineCode",{parentName:"p"},"App"),"."),(0,r.kt)("p",null,'De la cuarta a la s\xe9ptima l\xednea tenemos la prueba que renderiza el componente y verifica que exista un elemento con texto "learn react" (ignorando may\xfasculas y min\xfasculas) en el documento.'),(0,r.kt)("h2",{id:"encontrando-elementos"},"Encontrando elementos"),(0,r.kt)("p",null,"Una parte importante de las pruebas es encontrar elementos en la p\xe1gina para hacer validaciones (assertions) o interacciones (p.e. click en el mouse o escribir en el teclado)."),(0,r.kt)("p",null,"React Testing Library ofrece varias formas de encontrar elementos, entre ellas:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Por rol")," (",(0,r.kt)("inlineCode",{parentName:"li"},"getByRole"),"): el rol de un elemento describe su funcionalidad y se utiliza para mejorar la accesibilidad de la p\xe1gina. Es posible cambiar el rol por defecto de un elemento utilizando la propiedad ",(0,r.kt)("inlineCode",{parentName:"li"},"role"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Por texto")," (",(0,r.kt)("inlineCode",{parentName:"li"},"getByText"),"): por el texto del elemento."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Por testId")," (",(0,r.kt)("inlineCode",{parentName:"li"},"getByTestId"),"): por el valor del atributo ",(0,r.kt)("inlineCode",{parentName:"li"},"data-testid")," de cualquier elemento.")),(0,r.kt)("p",null,"Estas son las tres formas que nos parecen m\xe1s importantes. Para ver la lista completa te recomendamos revisar la ",(0,r.kt)("a",{parentName:"p",href:"https://testing-library.com/docs/queries/about"},"documentaci\xf3n de la librer\xeda"),"."),(0,r.kt)("p",null,"Por ejemplo, para seleccionar un encabezado (",(0,r.kt)("inlineCode",{parentName:"p"},"h1"),') podr\xedamos utilizar el rol "heading", el texto o agregarle un atributo ',(0,r.kt)("inlineCode",{parentName:"p"},"data-testid"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'// <h1>T\xedtulo</h1>\nscreen.getByRole("heading", { level: 1 })\n\n// <h1>T\xedtulo</h1>\nscreen.getByText("T\xedtulo")\n\n// <h1 data-testid="title">T\xedtulo</h1>\nscreen.getByTestId("title")\n')),(0,r.kt)("p",null,"Estos m\xe9todos retornan el elemento o lanzan una excepci\xf3n si no lo encuentran. F\xedjate que estamos llamando los m\xe9todos sobre el objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"screen"),", que es la forma m\xe1s com\xfan."),(0,r.kt)("p",null,"En React Testing Library no hay forma de encontrar elementos por ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," o ",(0,r.kt)("inlineCode",{parentName:"p"},"class")," (",(0,r.kt)("inlineCode",{parentName:"p"},"className")," en JSX). La raz\xf3n es que estos atributos pueden cambiar f\xe1cilmente y hacen que las pruebas sean muy fr\xe1giles."),(0,r.kt)("p",null,"Aunque React Testing Library promueve la b\xfasqueda por rol, en la pr\xe1ctica no es tan f\xe1cil conocer todos los roles. Afortunadamente existe una herramienta llamada ",(0,r.kt)("a",{parentName:"p",href:"https://testing-playground.com/"},"Testing Playground")," que nos ayuda con esta tarea. Tambi\xe9n existe una lista de todos los roles en ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques"},"este recurso"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"getByRole")," tiene las siguientes variaciones: ",(0,r.kt)("inlineCode",{parentName:"p"},"queryByRole"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"findByRole"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"getAllByRole"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryAllByRole"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"findAllByRole"),". Lo mismo ocurre con ",(0,r.kt)("inlineCode",{parentName:"p"},"getByTestId")," y las dem\xe1s formas de encontrar elementos."),(0,r.kt)("p",null,"Las variaciones que tienen la palabra ",(0,r.kt)("inlineCode",{parentName:"p"},"All")," se utilizan para encontrar varios elementos, las que no la tienen se utilizan para encontrar un solo elemento. Por ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'// retorna un arreglo con todos los encabezados\nscreen.getAllByRole("heading")\n\n// retorna un encabezado, si no hay o hay m\xe1s de uno genera una excepci\xf3n\nscreen.getByRole("heading")\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"getBy")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"queryBy")," (y su contrapartida ",(0,r.kt)("inlineCode",{parentName:"p"},"getAllBy")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"queryAllBy"),") son muy parecidas, la \xfanica diferencia es que ",(0,r.kt)("inlineCode",{parentName:"p"},"getBy")," lanza una excepci\xf3n si no hay coincidencias mientras que ",(0,r.kt)("inlineCode",{parentName:"p"},"queryBy")," retorna ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),", que es \xfatil cuando necesitamos verificar que un elemento ",(0,r.kt)("strong",{parentName:"p"},"no")," existe, por ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'expect(screen.queryByRole("...")).not.toBeInTheDocument()\n')),(0,r.kt)("p",null,"La diferencia entre ",(0,r.kt)("inlineCode",{parentName:"p"},"getBy")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"findBy")," (y ",(0,r.kt)("inlineCode",{parentName:"p"},"getAllBy")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"findAllBy"),") es que ",(0,r.kt)("inlineCode",{parentName:"p"},"getBy")," retorna el elemento inmediatamente mientras que ",(0,r.kt)("inlineCode",{parentName:"p"},"findBy")," retorna una promesa y se puede utilizar para encontrar elementos que pueden tomar tiempo en aparecer (o desaparecer)."),(0,r.kt)("p",null,"Por defecto ",(0,r.kt)("inlineCode",{parentName:"p"},"screen")," busca en todo el ",(0,r.kt)("inlineCode",{parentName:"p"},"body")," del documento. Para limitar la b\xfasqueda utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"within"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const container = screen.getByTestId("container")\nwithin(container).getByRole("heading")\n')),(0,r.kt)("h2",{id:"interactuando-con-los-elementos"},"Interactuando con los elementos"),(0,r.kt)("p",null,"Para interactuar con los elementos utilizamos el objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"fireEvent")," seguido del nombre del evento que queramos disparar. Por ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const input = screen.getByRole("textbox", { name: "email" })\nfireEvent.change(input, { target: { value: "pedro@example.com" } })\n\nconst button = screen.getByRole("button", { name: "Ingresar" })\nfireEvent.click(button)\n')),(0,r.kt)("p",null,"Disparar eventos de esta forma tiene una desventaja y es que debemos conocer el evento exacto que estamos utilizando. "),(0,r.kt)("p",null,"Por ejemplo, al escribir en un campo de texto se est\xe1n disparando varios eventos: ",(0,r.kt)("inlineCode",{parentName:"p"},"keyDown"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"keyPress"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"keyUp")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"change"),"."),(0,r.kt)("p",null,"Existe una librer\xeda complementaria llamada ",(0,r.kt)("inlineCode",{parentName:"p"},"@testing-library/user-event")," que nos permite simular interacciones que disparan todos los eventos de una acci\xf3n."),(0,r.kt)("p",null,"Para instalar la librer\xeda ejecuta:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ npm install --save-dev @testing-library/user-event\n")),(0,r.kt)("p",null,"La librer\xeda se utiliza de la siguiente forma:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const user = userEvent.setup()\n\nconst input = screen.getByRole("textbox", { name: "email" })\nawait user.type(input, "pedro{enter}")\n\nconst button = screen.getByRole("button", { name: "Ingresar" })\nawait user.click()\n')),(0,r.kt)("p",null,"Para aprender m\xe1s sobre ",(0,r.kt)("inlineCode",{parentName:"p"},"@testing-library/user-event")," te recomendamos ver la ",(0,r.kt)("a",{parentName:"p",href:"https://testing-library.com/docs/user-event/intro"},"documentaci\xf3n oficial"),"."),(0,r.kt)("h2",{id:"validando-los-elementos"},"Validando los elementos"),(0,r.kt)("p",null,"Aunque los m\xe9todos ",(0,r.kt)("inlineCode",{parentName:"p"},"getBy...")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"findBy...")," lanzan una excepci\xf3n si no se encuentran (y hacen que la prueba falle) es mejor hacer el ",(0,r.kt)("inlineCode",{parentName:"p"},"expect"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const h1 = screen.getByRole("heading", { level: 1 })\nexpect(h1).toBeInTheDocument()\n')),(0,r.kt)("p",null,"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"toBeInTheDocument")," es de la librer\xeda ",(0,r.kt)("inlineCode",{parentName:"p"},"@testing-library/jest-dom"),". Para ver la lista completa de ",(0,r.kt)("strong",{parentName:"p"},"matchers")," que agrega esta librer\xeda te recomendamos ver la ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/testing-library/jest-dom#readme"},"documentaci\xf3n oficial"),"."),(0,r.kt)("p",null,"Para negar alg\xfan matcher utiliza ",(0,r.kt)("inlineCode",{parentName:"p"},".not")," antes del matcher:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const h1 = screen.getByRole("heading", { level: 1 })\nexpect(h1).not.toBeInTheDocument()\n')),(0,r.kt)("p",null,"Para esperar a que aparezca un elemento puedes utilizar el ",(0,r.kt)("inlineCode",{parentName:"p"},"find...")," o el ",(0,r.kt)("inlineCode",{parentName:"p"},"waitFor"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const h1 = await screen.findByRole("heading", { level: 1 })\nexpect(h1).toBeInTheDocument()\n\n// espera a que aparezca un elemento con texto "algo" en el documento\nawait waitFor(() => expect(screen.getByText("algo")).toBeInTheDocument())\n')),(0,r.kt)("p",null,"En general es preferible utilizar el ",(0,r.kt)("inlineCode",{parentName:"p"},"find...")," cuando es posible."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Nota:")," Estos m\xe9todos retornan una promesa as\xed que no olvides el ",(0,r.kt)("inlineCode",{parentName:"p"},"await")," y agregarle el ",(0,r.kt)("inlineCode",{parentName:"p"},"async")," a la prueba."),(0,r.kt)("p",null,"Para esperar a que desaparezca un elemento puedes utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"waitForElementToBeRemoved")," o el ",(0,r.kt)("inlineCode",{parentName:"p"},"waitFor"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"await waitForElementToBeRemoved(() => screen.getByText('algo'))\n\nawait waitFor(() => screen.getByText(\"algo\")).not.toBeInTheDocument())\n")),(0,r.kt)("h2",{id:"debugging"},"Debugging"),(0,r.kt)("p",null,"Para imprimir el HTML en la consola utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"debug")," del objeto ",(0,r.kt)("inlineCode",{parentName:"p"},"screen"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// imprime todo el documento\nscreen.debug()\n// imprime un elemento\nscreen.debug(screen.getByText('test'))\n// imprime varios elementos\nscreen.debug(screen.getAllByText('multi-test'))\n")),(0,r.kt)("p",null,"Otra opci\xf3n interesante es el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"logTestingPlaygroundURL")," que genera un URL con un link al ",(0,r.kt)("a",{parentName:"p",href:"https://testing-playground.com/"},"Testing Playground"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// imprime en la consola una URL que puedes abrir en el navegador\nscreen.logTestingPlaygroundURL();\n")))}m.isMDXComponent=!0}}]);