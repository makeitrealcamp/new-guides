"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[8547],{3905:(e,a,n)=>{n.d(a,{Zo:()=>p,kt:()=>k});var r=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function m(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var l=r.createContext({}),s=function(e){var a=r.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},p=function(e){var a=s(e.components);return r.createElement(l.Provider,{value:a},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,l=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),d=s(n),u=t,k=d["".concat(l,".").concat(u)]||d[u]||c[u]||o;return n?r.createElement(k,i(i({ref:a},p),{},{components:n})):r.createElement(k,i({ref:a},p))}));function k(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,i=new Array(o);i[0]=u;var m={};for(var l in a)hasOwnProperty.call(a,l)&&(m[l]=a[l]);m.originalType=e,m[d]="string"==typeof e?e:t,i[1]=m;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4819:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>m,toc:()=>s});var r=n(7462),t=(n(7294),n(3905));const o={sidebar_position:5},i="Trabajando con Ramas (branches)",m={unversionedId:"git/ramas",id:"git/ramas",title:"Trabajando con Ramas (branches)",description:"Las ramas (branches) nos permiten desviarnos de la l\xednea principal de desarrollo que despu\xe9s podemos integrar a la l\xednea principal o descartar. Las ramas son \xfatiles para trabajar en nuevas funcionalidades, soluci\xf3n de errores o realizar experimentos, especialmente cuando estamos trabajando con m\xe1s desarrolladores sobre el mismo proyecto.",source:"@site/docs/git/ramas.md",sourceDirName:"git",slug:"/git/ramas",permalink:"/docs/git/ramas",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/git/ramas.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Ignorando archivo y carpetas",permalink:"/docs/git/gitignore"},next:{title:"Repositorios remotos",permalink:"/docs/git/repositorios-remotos"}},l={},s=[{value:"Listando las ramas",id:"listando-las-ramas",level:2},{value:"Creando una rama",id:"creando-una-rama",level:2},{value:"Cambiando el nombre de una rama",id:"cambiando-el-nombre-de-una-rama",level:2},{value:"Integrando una rama",id:"integrando-una-rama",level:2},{value:"Solucionando conflictos",id:"solucionando-conflictos",level:3},{value:"Eliminado una rama",id:"eliminado-una-rama",level:2},{value:"Rebasando una rama",id:"rebasando-una-rama",level:2}],p={toc:s},d="wrapper";function c(e){let{components:a,...n}=e;return(0,t.kt)(d,(0,r.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"trabajando-con-ramas-branches"},"Trabajando con Ramas (branches)"),(0,t.kt)("p",null,"Las ",(0,t.kt)("strong",{parentName:"p"},"ramas")," (branches) nos permiten desviarnos de la l\xednea principal de desarrollo que despu\xe9s podemos integrar a la l\xednea principal o descartar. Las ramas son \xfatiles para trabajar en nuevas funcionalidades, soluci\xf3n de errores o realizar experimentos, especialmente cuando estamos trabajando con m\xe1s desarrolladores sobre el mismo proyecto."),(0,t.kt)("p",null,"Por defecto ",(0,t.kt)("strong",{parentName:"p"},"git")," crea una ",(0,t.kt)("strong",{parentName:"p"},"rama")," por defecto llamada ",(0,t.kt)("inlineCode",{parentName:"p"},"master"),"."),(0,t.kt)("p",null,"Para ver en qu\xe9 rama te encuentras utiliza el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"git status"),". La primera l\xednea nos dice en qu\xe9 ",(0,t.kt)("strong",{parentName:"p"},"rama")," estamos:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"$ git status\nOn branch master\n...\n")),(0,t.kt)("h2",{id:"listando-las-ramas"},"Listando las ramas"),(0,t.kt)("p",null,"Para ver una lista de las ramas utiliza el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"git branch"),". Por ejemplo, suponiendo que tienes tres ramas (",(0,t.kt)("inlineCode",{parentName:"p"},"master"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"rama-1")," y ",(0,t.kt)("inlineCode",{parentName:"p"},"rama-2"),") el resultado ser\xeda similar al siguiente:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"$ git branch\n* master\nrama-1\nrama-2\n")),(0,t.kt)("p",null,"La rama con el asterisco a la izquierda es en la que nos encontramos actualmente."),(0,t.kt)("h2",{id:"creando-una-rama"},"Creando una rama"),(0,t.kt)("p",null,"Para crear una ",(0,t.kt)("strong",{parentName:"p"},"rama")," utiliza el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"git branch")," seguido del nombre que le quieres dar a la ",(0,t.kt)("strong",{parentName:"p"},"rama"),". Por ejemplo, para crear una nueva ",(0,t.kt)("strong",{parentName:"p"},"rama")," llamada ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama")," ejecutar\xedamos el siguiente comando:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"git branch mi-rama\n")),(0,t.kt)("p",null,"Este comando crea la ",(0,t.kt)("strong",{parentName:"p"},"rama")," pero no nos ubica sobre ella. Para cambiar de ",(0,t.kt)("strong",{parentName:"p"},"rama")," debes ejecutar el siguiente comando:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"git checkout mi-rama\n")),(0,t.kt)("p",null,"Sin embargo, la mayor\xeda de veces, cuando uno quiere crear una ",(0,t.kt)("strong",{parentName:"p"},"rama")," tambi\xe9n se quiere ubicar sobre ella, as\xed que existe un atajo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"git checkout -b mi-rama\n")),(0,t.kt)("p",null,"La diferencia con el comando anterior es la opci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"-b"),"."),(0,t.kt)("p",null,"Una vez que estamos ubicados sobre una ",(0,t.kt)("strong",{parentName:"p"},"rama"),", todos los ",(0,t.kt)("strong",{parentName:"p"},"commits")," se realizar\xe1n sobre esa ",(0,t.kt)("strong",{parentName:"p"},"rama"),"."),(0,t.kt)("h2",{id:"cambiando-el-nombre-de-una-rama"},"Cambiando el nombre de una rama"),(0,t.kt)("p",null,"Para cambiar el nombre de la ",(0,t.kt)("strong",{parentName:"p"},"rama")," debes estar ubicado sobre ella y ejecutar el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"git branch -m")," seguido del nuevo nombre. Por ejemplo, asumiendo que estamos sobre la rama ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama"),", y que queremos cambiarle el nombre a ",(0,t.kt)("inlineCode",{parentName:"p"},"otra-rama"),", ejecutar\xedamos el siguiente comando:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"git branch -m otra-rama\n")),(0,t.kt)("h2",{id:"integrando-una-rama"},"Integrando una rama"),(0,t.kt)("p",null,"Para integrar los commits de una ",(0,t.kt)("strong",{parentName:"p"},"rama")," (p.e. ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama"),") a otra (p.e. ",(0,t.kt)("inlineCode",{parentName:"p"},"master"),") primero debemos ubicarnos sobre la rama principal (p.e. ",(0,t.kt)("inlineCode",{parentName:"p"},"master"),") y ejecutar el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"git merge")," seguido del nombre de la ",(0,t.kt)("strong",{parentName:"p"},"rama"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"git checkout master\ngit merge mi-rama\n")),(0,t.kt)("p",null,"Si ",(0,t.kt)("inlineCode",{parentName:"p"},"master")," no tiene ",(0,t.kt)("strong",{parentName:"p"},"commits")," adicionales desde que creamos ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama"),", no es necesario crear un ",(0,t.kt)("strong",{parentName:"p"},"commit")," adicional. Sin embargo, si hay otros commits en ",(0,t.kt)("inlineCode",{parentName:"p"},"master")," se crear\xeda un nuevo commit, llamado ",(0,t.kt)("strong",{parentName:"p"},"merge commit"),", que integrar\xeda los cambios de ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama"),"."),(0,t.kt)("h3",{id:"solucionando-conflictos"},"Solucionando conflictos"),(0,t.kt)("p",null,"Es posible que se realicen cambios en las dos ",(0,t.kt)("strong",{parentName:"p"},"ramas")," que generen conflictos a la hora de integrarlas (p.e. si se crea un archivo con el mismo nombre en las dos ",(0,t.kt)("strong",{parentName:"p"},"ramas")," o si se cambia la misma l\xednea de un archivo). En este caso es necesario solucionar los conflictos a la hora de hacer el ",(0,t.kt)("inlineCode",{parentName:"p"},"git merge"),"."),(0,t.kt)("p",null,"Por ejemplo, suponiendo que en ",(0,t.kt)("inlineCode",{parentName:"p"},"master")," se cre\xf3 un archivo llamado ",(0,t.kt)("inlineCode",{parentName:"p"},"prueba.txt")," con un texto ",(0,t.kt)("inlineCode",{parentName:"p"},"Hola desde master")," y en ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama")," se creo otro archivo con el mismo nombre pero el texto ",(0,t.kt)("inlineCode",{parentName:"p"},"Hola desde mi-rama"),", al hacer el ",(0,t.kt)("inlineCode",{parentName:"p"},"git merge")," ver\xedamos lo siguiente en la consola:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"$ git checkout master\n$ git merge mi-rama\nAuto-merging prueba.txt\nCONFLICT (add/add): Merge conflict in prueba.txt\nAutomatic merge failed; fix conflicts and then commit the result.\n")),(0,t.kt)("p",null,"La l\xednea 4 nos dice que existe un ",(0,t.kt)("strong",{parentName:"p"},"conflicto")," en ",(0,t.kt)("inlineCode",{parentName:"p"},"prueba.txt"),". Al abrir el archivo ver\xedamos algo as\xed:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"<<<<<<< HEAD\nHola desde master\n=======\nHola desde mi-rama\n>>>>>>> mi-rama\n")),(0,t.kt)("p",null,"Lo que est\xe1 entre la l\xednea 1 y 3 es lo que est\xe1 en ",(0,t.kt)("inlineCode",{parentName:"p"},"master")," y lo que est\xe1 entre la l\xednea 3 y 5 es lo que est\xe1 en ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama"),". Para solucionar el ",(0,t.kt)("strong",{parentName:"p"},"conflicto")," debemos decidir qu\xe9 vamos a dejar y qu\xe9 vamos a eliminar. Muy importante es siempre elimianar las l\xedneas que definen los l\xedmites (las que comienzan con ",(0,t.kt)("inlineCode",{parentName:"p"},"<<<<<<<"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"=======")," y ",(0,t.kt)("inlineCode",{parentName:"p"},">>>>>>>"),")."),(0,t.kt)("p",null,"Por ejemplo, asumiendo que queremos dejar las dos frases deber\xedamos modificar el archivo para que quede de la siguiente forma:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Hola desde master\nHola desde mi-rama\n")),(0,t.kt)("p",null,"Los editores de programaci\xf3n como VSCode o Atom nos permiten solucionar los conflictos gr\xe1ficamente. Por ejemplo, la siguiente imagen nos muestra lo que aparecer\xeda en Atom cuando abrimos ",(0,t.kt)("inlineCode",{parentName:"p"},"prueba.txt"),":"),(0,t.kt)("p",null,"Podemos utilizar los botones que dicen ",(0,t.kt)("inlineCode",{parentName:"p"},"use me")," si s\xf3lo queremos dejar alguno de los cambios, o podemos dar click sobre los tres puntos para ver m\xe1s opciones. Lo importante es que al final no nos queden las l\xedneas que definen los l\xedmites y el archivo quede como queramos."),(0,t.kt)("p",null,"Una vez solucionado el conflicto debemos indicarle a ",(0,t.kt)("strong",{parentName:"p"},"git")," que ya lo solucionamos utilizando el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"git add")," y continuar con el merge."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"git add prueba.txt\ngit commit -m 'Merge branch \"mi-rama\"'\n")),(0,t.kt)("p",null,"Si omites el mensaje se abrir\xe1 el editor de texto por defecto para que lo ingreses."),(0,t.kt)("h2",{id:"eliminado-una-rama"},"Eliminado una rama"),(0,t.kt)("p",null,"Para eliminar una ",(0,t.kt)("strong",{parentName:"p"},"rama")," que ya ha sido integrada en otra utilizamos el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"git branch -d"),". Para que este comando funcione debemos estar ubicados en la rama a la que fue integrada. Por ejemplo, asumiendo que ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama")," ya fue integrada a ",(0,t.kt)("inlineCode",{parentName:"p"},"master")," ejecutar\xedamos el siguiente comando:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"git checkout master\ngit branch -d mi-rama\n\n")),(0,t.kt)("p",null,"Si no hemos integrado la rama pero igual la queremos eliminarla, podemos cambiar la opci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"-d")," por ",(0,t.kt)("inlineCode",{parentName:"p"},"-D"),". Por ejemplo, asumiendo que la rama ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama")," tiene nuevos commits y no ha sido integrada, podemos eliminarla ejecutando el siguiente comando:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"git branch -D mi-rama\n")),(0,t.kt)("h2",{id:"rebasando-una-rama"},"Rebasando una rama"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota:")," Rebasar ramas es un tema avanzado que recomendamos omitir hasta que tengas un poco m\xe1s experiencia con Git."),(0,t.kt)("p",null,"Una rama se rebasa con alguno de dos siguientes objetivos:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Actualizar una rama con respecto a otra. Imagina que est\xe1s en una ",(0,t.kt)("inlineCode",{parentName:"li"},"mi-rama")," pero en ",(0,t.kt)("inlineCode",{parentName:"li"},"master")," hay unos commits nuevos que necesitas traer a ",(0,t.kt)("inlineCode",{parentName:"li"},"mi-rama")," para terminar lo que est\xe1s haciendo."),(0,t.kt)("li",{parentName:"ol"},"Evitar el ",(0,t.kt)("strong",{parentName:"li"},"merge commit")," al integrar. Si rebasas ",(0,t.kt)("inlineCode",{parentName:"li"},"mi-rama")," contra ",(0,t.kt)("inlineCode",{parentName:"li"},"master")," antes de integrarla vas a evitar la necesidad de crear un ",(0,t.kt)("strong",{parentName:"li"},"merge commit")," cuando ejecutes ",(0,t.kt)("inlineCode",{parentName:"li"},"git merge")," (asumiendo que ",(0,t.kt)("inlineCode",{parentName:"li"},"master")," tiene nuevos commits).")),(0,t.kt)("p",null,"Para rebasar una rama debes ubicarte sobre la rama derivada (p.e. mi-rama) y ejecutar el siguiente comando (asumiendo que la quieres rebasar contra ",(0,t.kt)("inlineCode",{parentName:"p"},"master"),"):"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"git checkout mi-rama\ngit rebase master\n")),(0,t.kt)("p",null,"Lo que hace el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"git rebase")," es lo siguiente:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Mueve los nuevos commits que hayas hecho sobre ",(0,t.kt)("inlineCode",{parentName:"li"},"mi-rama")," a un lugar temporal."),(0,t.kt)("li",{parentName:"ol"},"Actualiza ",(0,t.kt)("inlineCode",{parentName:"li"},"mi-rama")," con los nuevos commits que se hayan creado en ",(0,t.kt)("inlineCode",{parentName:"li"},"master"),"."),(0,t.kt)("li",{parentName:"ol"},"Aplica los nuevos commits que hayas hecho sobre ",(0,t.kt)("inlineCode",{parentName:"li"},"mi-rama"),", pero ahora ya est\xe1 actualizada con respecto a ",(0,t.kt)("inlineCode",{parentName:"li"},"master"),".")),(0,t.kt)("p",null,"El resultado es que ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama")," tiene los mismos commits que master m\xe1s los nuevos que ten\xedas en ",(0,t.kt)("inlineCode",{parentName:"p"},"mi-rama"),"."),(0,t.kt)("p",null,"En el paso 3 pueden ocurrir conflictos que deber\xe1s solucionar de forma similar a lo que vimos en la secci\xf3n ",(0,t.kt)("strong",{parentName:"p"},"Solucionando conflictos"),"."))}c.isMDXComponent=!0}}]);