"use strict";(self.webpackChunkmir_guia=self.webpackChunkmir_guia||[]).push([[7092],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=p(n),m=o,k=l["".concat(i,".").concat(m)]||l[m]||d[m]||a;return n?r.createElement(k,s(s({ref:t},u),{},{components:n})):r.createElement(k,s({ref:t},u))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[l]="string"==typeof e?e:o,s[1]=c;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1372:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},s="Testing",c={unversionedId:"redux/testing",id:"redux/testing",title:"Testing",description:"Cuando est\xe1s probando tus aplicaciones de React debes tener en cuenta lo siguiente:",source:"@site/docs/redux/testing.md",sourceDirName:"redux",slug:"/redux/testing",permalink:"/docs/redux/testing",draft:!1,editUrl:"https://github.com/makeitrealcamp/new-guides/tree/main/docs/redux/testing.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Redux ToolKit",permalink:"/docs/redux/redux-tool-kit"},next:{title:"Introducci\xf3n a Node.js",permalink:"/docs/nodejs/"}},i={},p=[{value:"Probando los componentes conectados",id:"probando-los-componentes-conectados",level:2},{value:"Probando las funciones constructoras",id:"probando-las-funciones-constructoras",level:2}],u={toc:p},l="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(l,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"testing"},"Testing"),(0,o.kt)("p",null,"Cuando est\xe1s probando tus aplicaciones de React debes tener en cuenta lo siguiente:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Probar los componentes presentacionales de forma aislada (sin Redux)."),(0,o.kt)("li",{parentName:"ol"},"Probar los componentes conectados utilizando un ",(0,o.kt)("strong",{parentName:"li"},"mock")," del ",(0,o.kt)("strong",{parentName:"li"},"store"),". Un ",(0,o.kt)("strong",{parentName:"li"},"mock")," es un objeto que simula ser otro objeto."),(0,o.kt)("li",{parentName:"ol"},"Probar las ",(0,o.kt)("strong",{parentName:"li"},"funciones reductoras"),"."),(0,o.kt)("li",{parentName:"ol"},"Probar los ",(0,o.kt)("strong",{parentName:"li"},"actions creators"),".")),(0,o.kt)("p",null,"El primer punto est\xe1 en el m\xf3dulo de ",(0,o.kt)("a",{parentName:"p",href:"/docs/react/testing"},"React"),", as\xed que nos vamos a concentrar en los otros tres."),(0,o.kt)("h2",{id:"probando-los-componentes-conectados"},"Probando los componentes conectados"),(0,o.kt)("p",null,"Los componentes conectados de Redux reciben el ",(0,o.kt)("strong",{parentName:"p"},"store")," como ",(0,o.kt)("strong",{parentName:"p"},"prop"),", as\xed que podemos crear un ",(0,o.kt)("strong",{parentName:"p"},"mock")," del ",(0,o.kt)("strong",{parentName:"p"},"store")," y pas\xe1rselo. Para eso vamos a utilizar una librer\xeda llamada ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/dmitry-zaets/redux-mock-store"},"redux-mock-store"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# npm\nnpm install --save-dev redux-mock-store\n\n# yarn\nyarn add redux-mock-store --dev\n")),(0,o.kt)("p",null,"Ahora creemos una prueba de un componente conectado:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import React from "react";\nimport { render } from "enzyme";\nimport configureStore from "redux-mock-store";\nimport TaskList from "./TaskList";\n\nconst mockStore = configureStore();\n\nit("renders no tasks when store is empty", () => {\n  const store = mockStore({ tasks: [] });\n\n  const wrapper = render(<TaskList store={store} />);\n  expect(wrapper.find(\'.task\').length).toBe(0);\n});\n')),(0,o.kt)("p",null,"El siguiente video muestra lo que acabamos de hacer en m\xe1s detalle."),(0,o.kt)("p",null,"{% youtube %} ",(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=Tos2l5uTBjA"},"https://www.youtube.com/watch?v=Tos2l5uTBjA")," {% endyoutube %}"),(0,o.kt)("h2",{id:"probando-las-funciones-constructoras"},"Probando las funciones constructoras"),(0,o.kt)("p",null,"El primer paso para poder probar las funciones constructoras es moverlas a un archivo independiente, por ejemplo en un archivo ",(0,o.kt)("inlineCode",{parentName:"p"},"reducers.js"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const tasks = (state=[], action) {\n  // ...\n};\n\nconst users = (state=[], action) {\n  // ...\n}\n\nexport { tasks, users };\n")),(0,o.kt)("p",null,"Ahora, en el ",(0,o.kt)("strong",{parentName:"p"},"store")," debemos importarlas:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { createStore, combineReducers } from "redux";\nimport * as reducers from "./reducers";\n\nexport default createStore(combineReducers(reducers));\n')),(0,o.kt)("p",null,"La forma de probar las funciones constructoras es invoc\xe1ndolas con diferentes estados iniciales y diferentes acciones para verificar que los nuevos estados sean los esperados:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { tasks, users } from "./reducers";\n\ndescribe("tasks", () => {\n  it("returns the initial state", () => {\n    expect(tasks(undefined, {})).toEqual([]);\n  });\n\n  it("adds a task", () => {\n    const task = { id: 1, name: "test" };\n    const action = { type: "NEW_TASK", task: task };\n    expect(tasks([], action)).toContainEqual(expect.objectContaining(task));\n  });\n\n  // more tests\n});\n\n// more tests\n')),(0,o.kt)("p",null,"{% youtube %} ",(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=XaXFAVnb5ok"},"https://www.youtube.com/watch?v=XaXFAVnb5ok")," {% endyoutube %}"),(0,o.kt)("p",null,"###\xa0Probando los action creators"),(0,o.kt)("p",null,"La forma m\xe1s f\xe1cil de probar los action creators es invocarlos y verificar que devuelvan la acci\xf3n que esperamos. Por ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { newTask } from "./actionCreators";\n\nit("creates the new task action", () => {\n  const action = newTask({ id: 1, name: "test" });\n  expect(action).not.toBeNull();\n  expect(action.type).toBe("NEW_TASK");\n  expect(action.product).not.toBeNull();\n});\n')),(0,o.kt)("p",null,"Para conocer otra forma y probar action creators con ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux-thunk"},"redux-thunk")," mira el siguiente video:"),(0,o.kt)("p",null,"{% youtube %} ",(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=h7dFY-8XNxY"},"https://www.youtube.com/watch?v=h7dFY-8XNxY")," {% endyoutube %}"))}d.isMDXComponent=!0}}]);